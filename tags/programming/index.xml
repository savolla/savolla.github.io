<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on savolla&#39;s blog</title>
    <link>https://savolla.github.io/tags/programming/</link>
    <description>Recent content in programming on savolla&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2075. All rights reserved.</copyright><atom:link href="https://savolla.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>one Makefile for everything</title>
      <link>https://savolla.github.io/posts/one-makefile-for-everything/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://savolla.github.io/posts/one-makefile-for-everything/</guid>
      <description>here! you found it! this is one single Makefile that fits all projects with this file structure:
project / ├── include ├── build ├── lib ├── obj ├── src ├── test ├── main.c └── Makefile TARGET_EXEC ?= a.out BUILD_DIR ?= ./build SRC_DIRS ?= ./src SRCS := $(shell find $(SRC_DIRS) -name *.cpp -or -name *.c -or -name *.s) OBJS := $(SRCS:%=$(BUILD_DIR)/%.o) DEPS := $(OBJS:.o=.d) INC_DIRS := $(shell find $(SRC_DIRS) -type d) INC_FLAGS := $(addprefix -I,$(INC_DIRS)) CPPFLAGS ?</description>
    </item>
    
    <item>
      <title>programming in doom emacs</title>
      <link>https://savolla.github.io/posts/programming-in-doom-emacs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://savolla.github.io/posts/programming-in-doom-emacs/</guid>
      <description>This is how I use doom emacs for daily coding. Doom and it&amp;rsquo;s packages are working together to make developer&amp;rsquo;s life easy. Here I made a complete list for you guys. This is a step by step guide to do coding on doom emacs. By the way when I say things like C-c C-p it means CTRL + c + p
before we start to make things work enable specified modules in your init file</description>
    </item>
    
  </channel>
</rss>
