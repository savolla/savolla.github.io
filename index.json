[{"content":"Hey I\u0026rsquo;m Oleksiy! I do digital electronics, Linux sysadmin, c/c++ dev, x86, ARM, os development, embedded systems and everything bare-metal! I\u0026rsquo;m a Computer Engineering student in Turkey. My interests are mostly between hardware and software. Contact me from Telegram or freenode to talk about geeky stuff! savolla is my username on freenode\n","description":"i do digital electronics, linux, c/c++ dev, x86, ARM, os development, embedded systems and everything bare-metal!","id":2,"section":"","tags":null,"title":"about","uri":"https://savolla.github.io/about/"},{"content":"bölüm 1 - yazılım inşasına giriş   yazara göre, bu kitap, etrafa dağılmış bilginin bir yere toplanmış hali\n  yazılım geliştirme ve programlama aynı şey değildir\n  yazılım inşası, yazılım geliştirme alanındaki bazı konuları içinde barındıran özelleşmiş bir alt daldır. yazılım inşası\u0026rsquo;nın (construction) dokunuğu dallar:\n coding and debugging unit testing detailed design integration construction planning    construction terimi, programlama termine benzemektedir.\n  construction\u0026rsquo;ın yazılım konusunda yaptığı işler:\n kodun temelini oturtmak kodun nasıl test edileceğini belirlemek sınıfları tasarlama ve yazmak değişkenleri oluşturmak ve isimlendirmek kontrol yapılarının seçimi ve kod bloklarının organizasyonunu sağlamak unit test, integrasyon test ve debug yapmak varsa diğer takım üyelerinin kodunu incelemek ve kendi kodunun incelemesine izin vermek koda yorum satırı eklemek ve dikkatli bir şekilde organize etmek/formatlamak üçüncü parti yazılımları, koda entegre etme koda ince ayar yaparak daha hızlı çalışmasını ve daha az memory yemesini sağlamak    construction\u0026rsquo;ın dışında kalan alanlar\n yönetim gereksinim geliştirme yazılım mimarisi kullanıcı arayüzü tasarımı sistem testi    construction, boyuta bağlı olarak, bir yazılım projesinin %30 veya %80\u0026rsquo;ini kaplayabilir\n  mimari ve gereksinimler, construction\u0026rsquo;dan önce gerçekleşen şeylerdir. bu sayede construction çok daha hızlı ve verimli bir şekilde ilerler\n  kaynak kodu, construction evresinin bir ürünüdür. zamanla beraber, gereksinim ve dizayn dökümanları güncelliğini yitirse dahi kaynak kodu her zaman güncel kalır.\n  bölüm 2 - yazılım geliştirme metaforları   çok iyi anlamadığımız şeyleri bazen çok iyi bildiğimiz bir şeylerle ilişkilendirdiğimizde yani metafor kullandığımızda, olayı modellemiş oluruz ve daha iyi anlamış oluruz\n  kitapta yazılım geliştirme için kullanılan metafor ise ev inşaatı\n  mesela köpeğin için bir kulube yapmaya kalkarsak, ihtiyacımız olan sadece bir kaç tahta ve çivi. kulube bittiğinde eğer bir şeyleri yanlış yaptıysak, bu çok büyük bir sorun teşkil etmez. ya var olan kulubeyi alıp üzerinde oynamalar yaparak düzeltiriz ya da onun yerine yeni bir kulube yapabiliriz.\n  yukarıdaki metafor, yazdığımız küçük kodlar/projeler için de geçerlidir. program düzgün çalışmıyorsa ya üstünde oynama yapar düzeltmeye çalışırız ya da sil baştan yeni bir tane yazarız\n  daha büyük bir ev yapmak istediğimizde ise metaforu genişletmemiz gerekir:\n nasıl bir ev yapmak istiyoruz? : problemi anlamak mimar bir tasarım yapar : yazılım mimari dizaynı evin planının çıkarılması : detaylı yazılım tasarımı    ","description":"","id":10,"section":"posts","tags":["book"],"title":"Code Complete Notlarım","uri":"https://savolla.github.io/posts/code-complete-notes/"},{"content":"Bu post\u0026rsquo;da Türkçe olarak Cracking the Coding Interview kitabının özetini çıkartıyorum. Ilk ve ikinci bölümleri ingilizce yazdım, dert etmeyin onları revize edip Türkçeleştireceğim. Bu kitapta, iş başvurularında dikkat edilecek hususlar çok güzel anlatılmıştır. Ben de en azından özetini çıkararak önemli yerleri sizinle paylaşmaya karar verdim. İyi okumalar\nBölüm 1  recruiters look for the following;  analytical skills  how confidently you solved the problem how optimal was your solution how fast you are how efficient was your algorithm   coding skills  how clean your code is how good your style was did you handle errors or not   computer science knowledge. do you have strong foundation or not did you make challanging / interesting projects before or not do you communicate well or not   having knowledge of data structures and algorithms is really important and positively corelates with being a good developer the reason behind whiteboard coding is that recruiters want you to focus on actual problem solving instead of struggling in restricted computer environment when compilers spit errors all over the place. the code you write does not need to be perfect and it\u0026rsquo;s okay if it contains some syntactical errors. just show to the interviewer how you approach to the problem and write an acceptable code companies usually follow a pattern when selecting interview questions. there are two types of questions;  algorithm questions technology questions (do you have experience with techonology X?)   interviewers always compare your performance to other\u0026rsquo;s that came before and after you. even if you think that you performed well, a japanese hacker who came before you can change all the game. it\u0026rsquo;s all about luck m8 don\u0026rsquo;t think that you\u0026rsquo;ve been rejected immediately if you don\u0026rsquo;t get response in 2-3 days. your interviewer might still work on your and other assessments. be patient and calm if you\u0026rsquo;ve been rejected but really want that job you must wait for at least 6 months before re-application.  Bölüm 2  before face-to-face interview you always get a screen interview. this is actually a phone interview where skype or relative apps are used coding and algorithms questions are asked during the screen interview. questions are hard as ones that asked in face-to-face interview sometimes interviewer might give you a homework which you solve and send the code through e-mail. (rare case) the most of the time questions are asked in real time and you try to solve them while interviewer watches (common case) you do one or two screens before they take you to face-to-face arena  Bölüm 3   aşağıdaki maddelerde, bazı değişken durumlar anlatılmıştır;\n  görüşmeciler (interviewer) çok tecrübeli ve uzun süre çalışan geliştiricileri, daha düşük standartlarda görüp algoritmik soruları daha kolay sorabilir. ne de olsa bu insanlar mezun olalı yıllar olmuştur ve görüşmeciler, onların paslandıklarının farkındadırlar\n  bazı şirketlerde de tam tersi olabilir. yani uzun süre çalışanların daha çok problem çözdüğünü ve bu konuda yıllar geçtikçe daha iyi olduklarını düşünürler ve yeni mezunlara göre daha zor sorabilirler\n  çoğu zaman tecrübeli kişilere system tasarımı soruları gelirken yeni mezun olanlar bu konuda çalşma yapmadıkları için (daha çok akademik derslere ağırlık verdiklerinden) genelde bu sorulardan kurtulabilirler\n  yeni mezunlara göre tecrübelilerin, sorulara çok daha ayrıntılı cevap vermeleri beklenir. yani yeni mezunsak iş çok daha kolay. sadece algoritma sorularına çalışmamız (hackerrank, codewars) ve şu an zaman varken bol bol proje yapmamız yeterli olacaktır. tecrübelilerin iş bulması bizden daha zor\n    skill atrophy: bir yetenek ya da bilgi kullanılmadığında, o yeteneğin körelmesi anlamına gelir. bizim perspektifimizden bakıldığında, algoritma ve kodlama bir yetenektir ve asla atrofiye uğramaması gerekir\n   kitapta bu bölümde, SDET ve PM ile ilgili kariyer ve görüşme tavsiyeleri verilmiş. bu bizi şu anda ilgilendirmiyor.\n   SDET: (software design engineer and tester) yazılımları test eden elemanlardır. bunların genelde normal bir developerdan daha iyi olması beklenir çünkü bu iş aynı zamanda kalite kontrol\u0026lsquo;ün yazılım camiasındaki karşılığıdır. bu yüzden bir SDET\u0026rsquo;in iş bulması demek, buraya kadar bahsi geçen pozisyonlardan daha çok çalışması gerek demek oluyor\n  PM (Product Manager): daha çok takım yönetimi yapan ve geliştiricilerin ürettiği yazılımın sorumluluğunu üstlenen elemandır. kod yazmaktan çok işin business tarafıyla ilgilenir\n  bir startup\u0026rsquo;a katılmak istiyorsan;\n  CV\u0026rsquo;de ilk göze çarpan kısmın, yapılan projeler olması gerekir. startup alım süreçlerinde CV incelemesi sırasında kişinin ne kadar girişimci ve programlama konusunda ne kadar üretken olduğu, bu kısımda göze çarpar. yani \u0026ldquo;ben şu dilleri biliyorum\u0026rdquo;, \u0026ldquo;şu teknolojileri biliyorum\u0026rdquo;\u0026lsquo;a bakmazlar (genelde)\n  kesinlikle, bir startup görüşmecisiyle \u0026ldquo;samimi\u0026rdquo; ve \u0026ldquo;arkadaşça\u0026rdquo; iletişim kurulması gerekir. şirket henüz çok küçüktür ve insanlar yanlarında genelde takılabilecekleri insanlar arar. burada işin sosyal tarafı, iş tarafı kadar ağır basabilir\n  startup\u0026rsquo;daki projede kullanılan dil ile ilgili çok iyi bir derinliğe sahip ol çünkü sorular genelde dil spesifik gelir. (bir startup\u0026rsquo;a göre dil öğrenmek değil de bildiğimiz dilde iş yapan bir startup\u0026rsquo;a başvurmak çok daha efektif olur)\n  strtuplar tecrübe de isterler. buradan benim çıkarttığım, büyük şirketler, tecrübeli developerları görüşme esnasında çok hırpalarken, startuplarda genelde iş küçük olduğundan tecrübelileri havada kapıyor olabilirler. bu yüzden yeni mezun birinin büyük bir şirkette iş bulması, startup\u0026rsquo;da iş bulmasından daha kolaydır (?)\n     buradan sonrası, şirket içi iş görüşmelerinden ve interviewerlara tavsiyelerden bahsediyor. bizim için şu anlık önemli değil\n Bölüm 4 Tecrübe Kazanma Yolları  iyi bir tecrübe yoksa, iyi bir CV olmaz. iyi bir CV yoksa da kimse sizi iş görüşmesine çağırmaz öğrenciler bakımından yukarıdaki sorunun çözümü;  gerçek sorunlar çözen projeler yap staj yap startup ara boş zamanında bir proje yap, hackatonlara katıl, github\u0026rsquo;da open source bir projeye katkıda bulun    Iyi Bir CV Yazma Yolları   aslında şirketler birinde sadece şunları ararlar;\n zeki misin? kod yazabilir misin?  CV\u0026rsquo;de yazanlar, bu iki şeyin kanıtı olmalıdır. şirketlere zeki ve çalışkan olduğunuzu katınladığınız anda işi kaparsınız\n  CV yazarken, odak noktası kesinlikle \u0026ldquo;zeki misin?\u0026rdquo; ve \u0026ldquo;kod yazabiliyor musun?\u0026rdquo; sorularına cevap vermeli. teknik olmayan şeyeri (hobi gibi) CV\u0026rsquo;ye eklemek çok akıllıca değildir\n  öğrencilerin ve 10 seneden az tecrübesi olan kişilerin CV\u0026rsquo;si 1 sayfa olmalıdır. data tecrübeliler 1.5 ya da 2 sayfa olmalıdır\n  uzun bir CV hiç bir zaman faydalı değildir çünkü iş verenler CV\u0026rsquo;ye bakarken en fazla 10 saniye harcarlar.\n  CV\u0026rsquo;ye sadece sırasıyla;\n en büyük projeleri en büyük tecrübeleri (iş tecrübesi, programlama dilleri) en büyük başarılarını  yukarıdakilerden daha fazla şey yazmak, iş verenin sadece dikkatini dağıtır.\n  bazı işverenler, uzun CV gördüklerinde direk fırlatırlar..\n  CV her zaman İngilizce olmalıdır. her zaman ana dili ingilizce olan ya da bir tercumana okutup gramer ya da yazım yanlışlarınızı kontrol ettirin.\n  CV\u0026rsquo;de yaş, cinsiyet, medeni durum belirtmeyin. bunu yaparsanız, özellikle Amerika\u0026rsquo;da ters teper\n  Tecrübeler   eğer çok tecrübeliysen ve 1 sayfaya sığdıramıyorsan, 1 sayfaya sığdırmanın yollarını ara. ya da en önemsizleri ele. 1 sayfa is the key\n  tecrübe kısmında, iş geçmişinin tamamını yazmak önerilmez. çünkü çok iş değiştiren biri olarak görünürsün. onun yerine sadece en önemlileri yaz. her şirket isminin altına tek cümleyle ne yaptığını anlat. örnek bir cümle kalıbı;\n Y\u0026rsquo;yi yaparak X\u0026rsquo;i başardım\n   Projeler  proje kısmı, yaptığınız en büyük 2-4 projeden oluşmalı projelerin açıklama kısmında;  hangi dil ya da dillerle yazıldı hangi teknolojiler kullanıldı proje bir takım projesi mi? bir kurs yardımıyla mı yapıldı? kendin mi yaptın?   yukarıdaki her maddeye uyulması mecburi değildir. eğer maddeler sizi iyi gösteriyorsa o zaman belirtin.  maddede, eğer projeyi bağımsız olarak tek başınıza yaptıysanız bunu belirtin. bu, iş verenler için takım projesi\u0026rsquo;nden daha değerlidir   çoğu insan CV\u0026rsquo;sine yaptığı bütün projeleri yazar ki bu iş verenleri yoran bir şey. maximum 4 proje yazın  Programlama Dilleri  bu güne kadar çalıştığınız bütün dilleri yazmaya kalkmayın en iyi olduğunuz ve en iyi bildiğiniz dilleri yazın çünkü bir insan bütün dillerin tüm teknik detaylarını bilemez. abartılmış bir liste, iş verenin sizin hakkınızda pozitif düşünceler oluşturmaz uzun dil listesine sahip adayları genelde iş görüşmesinde özellikle sınarlar ve normal bir listeye sahip birine nazaran çok daha zor sorular yöneltebilirler. yetkinlik seviyenizi kabaca parantezler içinde belirtin. örnek bir liste;  java (fluent) C++ (proficient) javascript (prior experience)   yetkinlik seviyesi için yıl yazmayın. 10 sene önce javascript öğrenip sadece bir kaç kere yazdıysanız bu gerçeten 10 yıllık bir tecrübe mi? eğer bir sertifikanız varsa ve bu bir programlama diliyle alakalıysa kesinlikle CV\u0026rsquo;de buna yer vermeyin. iş verenler bu sertifikaları ciddiye almazlar eğer bir dilin belli bir versiyonuyla ilgili tecrubeniz varsa mesela, C11, C99, Perl5 gibi, iş verenler kesinlikle bu tarz bir şeyi ciddiye almazlar. bunun yerine C ve Perl demek daha doğrudur. aslında bu tarz bir şey, yazılımcının dil konusunda ne kadar spesifik olduğunu gösterir ama çoğu şirket buna değer vermez stigma: bir programlamma dilinin zaman içinde ön yargılara maruz kalıp değerini yitirmesidir. örnek olarak Visual Basic ve .NET teknolojileri. eğer .NET işine baş vurmuyorsanız, bu teknolojileri ve diğer stigma kazanmış (ön yargı kazanmış) dilleri ya da teknolojileri CV\u0026rsquo;de belirtmeye gerek yok yukarıdaki maddeden yola çıkarak şirketlerin (özellikle Amerikadakilerin) önem verdikleri diller en az\u0026rsquo;dan en çoğa sıralanmıştır;  C#, .NET, Visual Basic Ruby, Python, Javascript Java, C++    İş Başvurusuna Hazırlık Haritası Bölüm 5   CV\u0026rsquo;de yazılan projeler incelenip genelde bu projelerle ilgili size soru yöneltilir. CV\u0026rsquo;yi inceleyen kişi, görüşmeden önce bu projelere ne kadar hakim olduğunuzu görmek için zor sorular hazırlayabilir.\n  CV\u0026rsquo;deki projeleri çok iyi çalşıp, şöyle bir tablo hazırlanması çok faydalı olacaktır;\n   yaygın soru proje1 proje2 proje3     zorluklar/buglar \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash;   hatalar/başarısızlıklar \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash;   keyif alınan taraflar \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash;   liderlik \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash;   çatışmalar (takım ise) \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash;   neyi farklı yapardın \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash; \u0026mdash;\u0026mdash;\u0026mdash;      bu tabloyu doldurup iyice çalış. iş veren projeler hakkında soru sordukça burda yazdıklarını hatırla ve cevapla\n  size \u0026ldquo;zayıf yanlarınız\u0026rdquo; nelerdir diye sorduklarında gerçek bir zayıflık söyleyin. \u0026ldquo;çok çalışmak\u0026rdquo; gibi cevaplar çok ciddiye alınmaz ve dürüst olmadığınızı düşündürür.\n  zayıflıklarınızdan bahsederken aynı zamanda bu zayıflıklarla nasıl başa çıkmaya çalıştığınızı da anlatmanız gerekir. örnek;\n yeni bir projeye başladığımda çok hızlı burn out olabiliyorum. başa çıkmak için pomodoro tekniğini kullanıyorum\n   yeni bir teknolojiyi öğrenirken, kendimi bu konuda sonuna kadar gitmem gerektiğine inandırıyorum. bundan dolayı teknolojiye öğrenmeye odaklanmak yerine, kendimi en iyi kaynağı araştırmaya zaman harcarken bulabiliyorum. Bu konuda tecrübe kazandığım için artık çoğu kez yaptığım yanlışın farkına varabiliyorum\n   Interviewer\u0026rsquo;a Yöneltilebilecek Sorular  interviewer size soru sormanıza izin verebilir. bir iş görüşmesinde, 3 tip önemli soru çeşidi vardır;  Hakiki Sorular cevaplarını gerçekten bilmek istediğiniz sorulardır\n şirkette, geliştirici, tester ve yönetici dengesi nasıl? takımda proje planlaması nasıl yapılıyor?\n   peki siz bu şirkete nasıl geldiniz? genelde bu çalışma ortamında sizi en çok zorlayan ne oluyor?\n Teknik Sorular bu sorular genelde şirkete başvurmadan önce bayağı bir araştırdığınızı anlatır\n gördüğüm kadarıyla X teknolojisini kullanıyorsunuz. bununla Y problemini nasıl çözüyorsunuz?\n   yaptığınız ürün X teknolojisi yerine neden Y\u0026rsquo;yi seçti? Y\u0026rsquo;nin A,B,C konularında avantajları olduğunu biliyorum ancak diğer şirketler Y\u0026rsquo;yi D sorunu yüzünden kullanmıyorlar\n Çalışkanlık Yansıtan Sorular bu tarz sorular iş verenin, sizin ne kadar azimli olduğunuzu görmesini ve şirket için faydalı olacağınızı düşünmesini sağlar\n Yazılımın ölçeklenebilirliği konusunda kendimi geliştirmeye çalışıyorum. bu şirkette bu konuyla alakalı neler öğrenebilirim?\n   Kullandığınız X teknolojisini daha önce hiç duymadım ancak çok ilginç bir yönteme benziyor. Nasıl çalıştığından biraz bahseder misiniz?\n Dikkat edilmesi gereken hususlar   projelerle ilgili konuşurken ya da sorular yöneltirken asla ama asla kibirli görünme. Kendini her zaman bir çaylakmışçasına alçak gönüllü ve saygılı olarak göster. (genel olarak öyle ol zaten)\n  görüşmeciler bu tarz çok insan ile karşılaştıklarından, artık insan sarrafı olma yolunda ilerliyorlardır. en ufak bir kibir belirtisinde çizerler\n  soruları cevaplarken, karşınızdakini detaya boğmayın. çok önemli noktalara değinin ve daha fazla detay gerektiren bir konuda, karşınızdakinden izin alıp öyle devam etmeye özen gösterin. çünkü gelen kişinin, teknik detaylardan ne kadar anladığını ya da duymaktan hoşlanıp hoşlanmadığını bilemezsiniz.\n  takım projesinde yer aldıysanız, takımın başarılarını anlatmak yerine kendinizin bu takımdaki başarılarınızdan bahsedin. çünkü takım ile ilgili konuşmalarınızda, sizin ne yaptığınız ile ilgili bir fikir oluşmaz\n  \u0026ldquo;kendininden biraz bahseder misiniz?\u0026rdquo; tarzı bir soru geldiğinde kronolojik sıraya gitmeye dikkat edin ve sırasıyla şunlardan bahsedin;\n Şu anda bir yerde çalışıyorsanız rol belirterek söze girin hangi okulda okudun ve hangi bölüm stajlar okuldan sonra ne yaptın iş dışında yaptığın projeler/çalışmalar şu anda neden burda olduğunu anlatarak toparla bitir  hobilerden bahsetmek istersen bunu 5. maddede belirt ancak hobilerden bahsetmek bazen tehlikeli olabilir. dikkat et\n  Bölüm 6 Big O  içini dışını bilmezsen, kötü gözle bakarlar   ","description":"","id":11,"section":"posts","tags":["book"],"title":"Cracking the Coding Interview Notes","uri":"https://savolla.github.io/posts/cracking-the-coding-interview-notes/"},{"content":"how to   name a css file?\nstyle.css or main.css\n  how to link style.css with index.html ?\nin html file,\n1  \u0026lt;link href=\u0026#34;./style.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;/\u0026gt;     write internal css?\nput your css code inside style tags\n1 2 3 4 5 6 7  \u0026lt;head\u0026gt; \u0026lt;style\u0026gt; h3 { color : red; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt;     how comments look in css?\n1  /* this is a comment */     change h1,h2 and h3 at the same selector?\n1 2 3  h1,h2,h3 { color : olive; }     change background color of the entire page?\n1 2 3  body { background-color : black; }     style by classes or id?\n1 2  \u0026lt;h3 class=\u0026#34;cls0\u0026#34;\u0026gt; TITLE0 \u0026lt;/h3\u0026gt; \u0026lt;h3 id=\u0026#34;cls1\u0026#34;\u0026gt; TITLE1 \u0026lt;/h3\u0026gt;   1 2 3 4 5 6 7  .cls0 { color : red; } #cls1 { color : blue; }     set space between two lines?\n1  line-height : 1.5em;     set font ?\n1  font-family : monospace;     set a background image?\n1  background-image: url(\u0026#34;../img/bg.png\u0026#34;);     set opacity of text?\nuse rgba() with a value between 1 and 0 at the end\n1 2 3  .class0 { color : rgba(100,53,81,0.5); }     make links without underline ?\n1 2 3  a { text-decoration : none; }     cancel all the default margins?\n1 2 3  *{ margin : 0; }     change font of an element?\n1 2 3  .element { font-family : Fira Code; }     use google fonts\n go to google fonts page select your font click select this style copy  part and paste is between  element copy CSS rules and paste it to CSS file where you want to use that font click on @import section and copy the code inside \u0026lt;style\u0026gt; element paste it into the top of your CSS file    make a font bolder?\nuse font-weight\n1 2 3  .element { font-weight: bold; }     make font italic?\nuse font-style\n1 2 3  .element { font-style : italic; }     reach a nested element inside a class?\nuse \u0026gt; syntax\n1 2 3 4 5 6  \u0026lt;div class=\u0026#34;cls0\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;item\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;item\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt;   1 2 3  cls0 \u0026gt; ul \u0026gt; li { /* your code */ }     increase space between letters in a paragraph?\n1 2 3  .element { letter-spacing: 5px; }     increase space between words ?\n1 2 3  .element { word-spacing: 5px; }     capitalize an entire paragraph ?\n1 2 3  .element { text-transform: capitalize; }     add hover action to an element?\n1 2 3  .element:hover { /* code */ }     add opacity to an element?\n1 2 3  .element { opacity: 0.5; }     add a border around an element?\n1 2 3  .element { border-style: solid; }     add border width of an element?\n1 2 3  .element { border-width: 10px; }     overlap two elements?\nwith negative margin\n  make list items on one line?\n1 2 3 4 5  \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;item1\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;item2\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;item3\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;   1 2 3  ul \u0026gt; li { display: inline; }     display text in the center of the element?\nuse text-align: center\n  create a navigation bar of a website?\n1 2 3 4 5 6  \u0026lt;div class=\u0026#34;navbar\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Contact\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Coffee\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Music\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt;   1 2 3 4 5 6 7 8 9 10  .navbar a { font-family: Fira Code; margin-right: 20px; font-size: 1rem; text-decoration: none; } .navbar { background: black; }     add a custom font to the css?\nadd the following on the top of css file\n1 2 3 4  @font-face { font-family: \u0026#34;font-name\u0026#34;; src: url(\u0026#34;../fonts/my-font.ttf\u0026#34;); }     set opacity of an element?\nuse opacity attribute\n1 2 3  .element { opacity: 0.5; }     use image as a background instead of straight color?\n1 2 3  .element { background: url(\u0026#34;/path/to/image.extension\u0026#34;); }     make an image non-repeatable?\n1 2 3 4  .element { background: url(\u0026#34;/path/to/image.extension\u0026#34;); background-repeat: no-repeat; }     spread the image into one area (div) ?\n1 2 3 4  .element { background: url(\u0026#34;/path/to/image.extension\u0026#34;); background-size: cover; }     center the background image?\n1 2 3  .element { background-position: center; }     adjust the position by x and y values of a background image?\nuse persentages to adjust\n1 2 3 4  .element { background: url(\u0026#34;/path/to/image.extension\u0026#34;); background-position: 20% 50%; }     add an image with protected aspect ratio?\n1 2 3 4  .element { background: url(\u0026#34;/path/to/image.jpg\u0026#34;); background-size: contain; }     align text to the center?\n1 2 3  .element { text-align: center; }     make a parallax effect?\nuse background-attachment\n1 2 3 4  .banner { background: url(\u0026#34;../img/bg.jpg\u0026#34;); background-attachment: fixed; }     make a gradient element? use grey and white\n1 2 3  .element { background-attachment: linear-gradient(grey, white); }     give angle to the gradient?\n1 2 3  .element { background: linear-gradient(45deg, white, black); }     make a nice transition effect ? when user scrolls down the transparent\nscreen comes on the background image. the background image does not change btw\n1 2 3 4 5  \u0026lt;div class=\u0026#34;first\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;second\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  .first { background: url(\u0026#34;../img/bg2.jpg\u0026#34;); background-attachment: fixed; background-size: cover; background-position: center; background-repeat: no-repeat; height: 100vh; } .second { background: url(\u0026#34;../img/bg2.jpg\u0026#34;); background-attachment: fixed; background-size: cover; background-position: center; background-repeat: no-repeat; opacity: 0.5; height: 100vh; }      what is   what css stands for?\ncascading style sheets\n  what is the syntax for css?\n1 2 3 4  selector{ property0 : value0; property1 : value1; }     what is the difference between span and div\n div is usefull for grouping elements together span is usefull for assigning some class or id names inline when elements grouped with div it will cause a new line hovewer span won\u0026rsquo;t cause a new line    what is the best way to represent a color ?\nusing rgb\n1 2 3  h1 { color : rgb(100,100,100); }     what is the most primitive way to represent size?\npixels.\n1 2 3  .cls0 { font-size : 12px; }     what is the drawbacks of representing something in pixels?\nsince pixels are constant and depends on nothing, it makes the element non-responsive. so the size will not change when screen size change\n  what is font stack ?\nit is a concept where we present different font families to the web browser. if web browser fails to render the first font family then it tryes out the second one. if web browser fails at every font then the last one (monospace) font will be assumed\nexample usage;\n1 2 3  .element { font-family : \u0026#39;Courier New\u0026#39; Courier, monospace; }     what is css box mode ?\n1 2 3 4 5 6 7 8 9 10 11 12  +-------------------------------------+ | Margin | | +-------------------------------+ | | | Border | | | | +-------------------------+ | | | | | Padding | | | | | | +-------------------+ | | | | | | | Content | | | | | | | +-------------------+ | | | | | +-------------------------+ | | | +-------------------------------+ | +-------------------------------------+     what is the shortcut way of writin borders?\nparameter order matters!\n1 2 3 4  .element { /* width style and color */ border: 5px solid blue; }     what is the difference between border and outline ?\n  borders are like glued to the content. we can\u0026rsquo;t put space between content and border\n  outlines in other hand they are more flexible than borders. also we can use only outlines instead of borders. we can give offset to outlines which borders can\u0026rsquo;t quite handle.\n1 2 3 4 5  .element { outline: 0.2rem solid black; outline-offset: 10px /* set outline 10px above the content */ outline-offset: -10px /* set outline 10px inside the content */ }       what are gradients ?\nit\u0026rsquo;s a color effect. two or more colors are mixed into one element. and result will look\nlike an oval object. used in button coloring\n  flash cards   where css can be added?\n inline inside  element seperate file    when you have multiple css files in which directory should we put them?\ncss/\n  what happens if we add internal css in a page that has external css ?\ninternal css will override external one\n  what happens if we add inline css in a page that has external css or internal css ?\ninline css will override external and internal ones\n  what does color attrubute do?\nit changes the text color\n  can we add multiple classes inside an element?\nwe can also add classes with ids\n1  \u0026lt;h3 class=\u0026#34;title\u0026#34; class=\u0026#34;lowercase\u0026#34; id=\u0026#34;testid\u0026#34;\u0026gt; hello \u0026lt;/h3\u0026gt;     unique elements should have \u0026hellip;\nid\n  why div blocks are used?\nto group elements. this helps us to specify elements in css\n  which grouping style causes new line ?\ndiv\n  where to get cool color schemes?\n coolors adobe color    what happens when we use width and height in persentage?\nthe persentage will work depending on the parent div\u0026rsquo;s sizes. for example if parent div has 20px height and we give 50% height to the child then child will have 10px height\n1 2 3 4 5 6 7 8  .parent { height : 20px; width : 20px; } .child { height : 50%; /* 20%50 = 10 */ width : 50%; /* 20%50 = 10 */ }     persentages will depend on \u0026hellip;\nparent values!\n  what vw and vh do?\nvw and vh are measure units in css. they are relative values depend on screen size. when browser window size change, then those values are also change\nexample;\n1 2 3 4  \u0026lt;div class=\u0026#34;cls0\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;cls1\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;   1 2 3 4 5 6 7 8 9 10 11 12  .cls0 { background-color : orange; width : 50vw; height : 50vh; } .cls1 { background-color : yellow; width : 50vw; height : 50vh; margin-left: 50vw; }     what calc() function does in css?\nit takes two values with px, vh, vw, rem, em etc and applies arithmatic operations on them.\n  use case scenario of calc() function\nassume we have a navbar on top of the page and it has 100px height. now let\u0026rsquo;s say we need a banner below navbar. this banner will have height of entire page (without scroll bar). how do we adjust that height automatically?\nin this case we can use calc() function like this:\n1 2 3 4 5  \u0026lt;div class=\u0026#34;navbar\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;banner\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;   1 2 3 4 5 6 7 8 9 10 11 12 13  *{ margin : 0; /* zero out default margins */ } .navbar { background : blue; height : 100px; } .banner { background : green; height : calc(100vh - 100px); /* 100vh - navbar.height */ }     what measure type should we use on line-height property ?\nem\n1 2 3  .element { line-height: 1em; }     what areas a,b,c and d effect in padding: a b c d ?\n1 2 3  .element { padding: top, right, left, bottom; }     what border-radius value turn element into circle?\n50%\n  what block elements do when rendered?\n always start a new line takes over full width    what inline elements do when rendered?\n does not start a new line does not occupy the full width    for block centering what topics are used in css?\nflex and grids\n  browser will ignore margin\u0026rsquo;s margin-top and margin-bottom properties if the element is \u0026hellip;\ninline\n  browser will ignore margin\u0026rsquo;s margin-left and margin-right properties if the element is \u0026hellip;\nblock\n  what property should we use to make the browser respect to inline element top and bottom margins?\nuse inline-block\n1 2 3 4  \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Contact\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Coffee\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Music\u0026lt;/a\u0026gt;   1 2 3  a { inline-block: }     create a nice banner with an image in bakcground\n1 2 3  \u0026lt;div class=\u0026#34;.banner\u0026#34;\u0026gt; \u0026lt;p\u0026gt;some text here\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;   1 2 3 4 5  .banner { background: url(\u0026#34;../img/bg1.jpg\u0026#34;); /* load the image */ background-size: cover; /* spread image across the div area */ background-repeat: no-repeat; /* prevent repetition */ }     what to do if background image is too bright and text on it is not visible?\nadd some opacity\n1 2 3 4  .element { background: url(\u0026#34;/path/to/image.jpg\u0026#34;); opacity: 0.5; }     ","description":"","id":12,"section":"posts","tags":null,"title":"CSS Cheat Sheet","uri":"https://savolla.github.io/posts/css-cheat-sheet/"},{"content":"how to   create a heading?\n1  \u0026lt;h1\u0026gt;Heading\u0026lt;/h1\u0026gt;     create a paragraph element?\n1  \u0026lt;p\u0026gt;paragraph\u0026lt;/p\u0026gt;     create an image element?\nnotice there are no closing forward slashes in img elements\n1  \u0026lt;img src=\u0026#34;path/to/image\u0026#34;\u0026gt;     break a line?\n1  \u0026lt;br/\u0026gt;     tell html to use latest html version?\nby putting the docstring\n1  \u0026lt;!DOCTYPE html\u0026gt;     generate all initial html structure with emmet?\n! + TAB\n  generate a div with a class with emmet?\ndiv.class_name + TAB\n  generate a div with an id with emmet?\ndiv#id_name + TAB\n  create 5 div elements with unique class names?\n.container$*5\n  get dummy text for experimenting?\nNUMBER is a number of words you want\nlorem__NUMBER__ + TAB\n  get 5 dummy texts that has 4 words per line ?\nlorem__WORDS__*__LINES__\n  display an image ?\n1  \u0026lt;img src=\u0026#34;./path/to/image.png\u0026#34; alt=\u0026#34;alternative text\u0026#34;/\u0026gt;     display images from internet (external images)?\n1  \u0026lt;img src=\u0026#34;http://www.addrsofpic.com/pic.png\u0026#34; alt=\u0026#34;blah\u0026#34; /\u0026gt;     adjust the size of very big images?\njust use width. height will be adjusted automatically as soon as we don\u0026rsquo;t specify it explicitly.\n1  \u0026lt;img src=\u0026#34;./path/to/img.png\u0026#34; width=\u0026#34;256\u0026#34; alt=\u0026#34;pexels\u0026#34; /\u0026gt;     add links?\n1  \u0026lt;a href=\u0026#34;www.google.com\u0026#34;\u0026gt;GOOGLE\u0026lt;/a\u0026gt;     add link that opens a new tab when opened?\nuse target=\u0026quot;_blank\u0026quot;\n1  \u0026lt;a href=\u0026#34;www.google.com\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;GOOGLE\u0026lt;/a\u0026gt;     add internal link? (in site link)\nspecify html file path in link element\n1  \u0026lt;a href=\u0026#34;./path/to/html\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt;     scroll and focus on an element with a link?\n1 2 3  \u0026lt;a id=\u0026#34;top\u0026#34; href=\u0026#34;#bottom\u0026#34;\u0026gt;go bottom\u0026lt;/a\u0026gt; \u0026lt;!-- Some looooooong text (5000 lines) --\u0026gt; \u0026lt;a id=\u0026#34;bottom href=\u0026#34;#top\u0026#34;\u0026gt;go to top\u0026lt;/a\u0026gt;     convert an image into a link?\nuse a\u0026gt;img + TAB\n1 2 3  \u0026lt;a href=\u0026#34;www.google.com\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;google_icon.png\u0026#34; alt=\u0026#34;icon\u0026#34;/\u0026gt; \u0026lt;/a\u0026gt;     use special characters in html? like copyright?\n1  \u0026lt;p\u0026gt;copyright \u0026amp;copy;\u0026lt;/p\u0026gt;     make left, down, right, up arrows?\n1 2 3 4  \u0026lt;p\u0026gt;left \u0026amp;larr;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;right \u0026amp;rarr;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;up \u0026amp;uarr;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;down \u0026amp;darr;\u0026lt;/p\u0026gt;     make unordered list ?\n1 2 3 4 5 6 7  \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;peter\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;john\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;sarah\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;michael\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;melinda\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;     make ordered list ?\n1 2 3 4 5 6  \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;michael\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;melinda\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;opeth\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;axe\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt;     create table in html?\nalways start with  element and then  for rows\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  \u0026lt;table\u0026gt; \u0026lt;!-- row of table headers --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;header1\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;header2\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;header3\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- row of table data --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;data1\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;data2\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;data3\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- second row of table data --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;data1\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;data2\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;data3\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt;     take an input from user?\n  create a form element form + TAB\n  input + TAB\n1 2 3  \u0026lt;form method=\u0026#34;\u0026#34; action=\u0026#34;\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;/form\u0026gt;       label the input bar\n1 2 3 4 5  \u0026lt;form method=\u0026#34;\u0026#34; action=\u0026#34;\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;nick\u0026#34;\u0026gt;username\u0026lt;/label\u0026gt; \u0026lt;!-- label the input bar --\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; id=\u0026#34;nick\u0026#34; /\u0026gt; \u0026lt;!-- input bar --\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; /\u0026gt; \u0026lt;!-- submit button --\u0026gt; \u0026lt;/form\u0026gt;     make passwords invisible when typing?\nnotice input type=\u0026ldquo;password\u0026rdquo; here. thi is the important one\n1  \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt;     show example input inside input box?\n1  \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;email\u0026#34; placeholder=\u0026#34;john@protonmail.com\u0026#34; /\u0026gt;     use radio buttons in html?\n1 2 3 4 5 6 7 8 9  \u0026lt;p\u0026gt;Your favorite language\u0026lt;/p\u0026gt; \u0026lt;input name=\u0026#34;coding\u0026#34; type=\u0026#34;radio\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt;Javascript \u0026lt;br /\u0026gt; \u0026lt;input name=\u0026#34;coding\u0026#34; type=\u0026#34;radio\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt;C++ \u0026lt;br /\u0026gt; \u0026lt;input name=\u0026#34;coding\u0026#34; type=\u0026#34;radio\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt;C \u0026lt;br /\u0026gt; \u0026lt;input name=\u0026#34;coding\u0026#34; type=\u0026#34;radio\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt;Python \u0026lt;br /\u0026gt;     make a big text area ?\nrows how many rows should be in our text area\ncols how many columns should be in our text area\n1  \u0026lt;textarea rows=\u0026#34;\u0026#34; cols=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt;     make check boxes in html?\n1 2 3 4 5 6  \u0026lt;p\u0026gt;What are your favorite languages?\u0026lt;/p\u0026gt; \u0026lt;input name=\u0026#34;\u0026#34; type=\u0026#34;checkbox\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt; C++ \u0026lt;br /\u0026gt; \u0026lt;input name=\u0026#34;\u0026#34; type=\u0026#34;checkbox\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt; C \u0026lt;br /\u0026gt; \u0026lt;input name=\u0026#34;\u0026#34; type=\u0026#34;checkbox\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt; Python \u0026lt;br /\u0026gt; \u0026lt;input name=\u0026#34;\u0026#34; type=\u0026#34;checkbox\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt; Javascript \u0026lt;br /\u0026gt; \u0026lt;input name=\u0026#34;\u0026#34; type=\u0026#34;checkbox\u0026#34; value=\u0026#34;\u0026#34;/\u0026gt; Rust \u0026lt;br /\u0026gt;     make a checkbox that already checked by default?\nput checked=\u0026ldquo;checked\u0026rdquo; inside input element\n1  \u0026lt;input type=\u0026#34;checkbox\u0026#34; checked=\u0026#34;checked\u0026#34;/\u0026gt; testbox     make a dropdown menu in html?\nlabel is not really necessary here but hey!\n1 2 3 4 5 6 7 8  \u0026lt;label for=\u0026#34;menu0\u0026#34;\u0026gt;favorite PL\u0026lt;/label\u0026gt; \u0026lt;select id=\u0026#34;manu0\u0026#34; name=\u0026#34;\u0026#34;\u0026gt; \u0026lt;option value=\u0026#34;#\u0026#34;\u0026gt;select language\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;js\u0026#34;\u0026gt;javascript\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;c\u0026#34;\u0026gt;C\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;cpp\u0026#34;\u0026gt;C++\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;rs\u0026#34;\u0026gt;Rust\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt;     what is   what is the first html line should be in a web page?\n1  \u0026lt;!DOCTYPE html\u0026gt;     what is the root element of html page?\n1  \u0026lt;html\u0026gt;     what head should contain?\nit contains the information about the page\n page title links to external resources like css and js files metadata    what  means?\ntable row\n  what  means?\ntable data\n  what  means?\ntable header\n  what is the importance of value attribute in radio buttons ?\nvalue in radio buttons is the data that will be passed into database or somewhere. when we select a radio button A and A contains value=\u0026ldquo;C++\u0026quot; then \u0026ldquo;C++\u0026rdquo; string will be sent from this radio button when submitted\n  what is the difference between radio buttons and check box ?\n radio buttons: choose only one check boxes: choose multiple    what is the checkbox shortcut with emmet\ninput:c + TAB\n  what is the submit button shortcut with emmet\ninput:s + TAB\n  flash cards   is content in head element visible in page?\nNo.\n  where page0 will be displayed?\nin the browser tab!\n  generate 5 list items with line numbers using emmet\nul\u0026gt;li.cls\\({\\).}*5\n  what will .container + TAB output?\ndiv is the most used element. so we don\u0026rsquo;t need to write div.container\n1 2 3  \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;     how many headings there are in html?\nthere are 6 hadings\n1 2 3 4 5 6  \u0026lt;h1\u0026gt;BIGGEST\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;Bigger\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;normal\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;smaller\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;smallest\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;tiny\u0026lt;/h6\u0026gt;     what path convention should be used in html?\ndot and a slash \u0026ldquo;./\u0026rdquo; is used in most frameworks and languages like react php etc.\n  how initial html page structure look?\n1 2 3 4 5 6 7 8 9  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; some code.. \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; some code.. \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;     where to get copyright free pictures?\n pexels also has videos pixabay gratisography    how comments look in html?\n1  \u0026lt;!-- this is a comment --\u0026gt;     what do sup and sub elements do?\nsup: pushes text up. it\u0026rsquo;s like x^2 (where 2 in above x)\nsub: pushed text down. it\u0026rsquo;s like index x_i (where i below x)\n1  \u0026lt;p\u0026gt;x\u0026lt;sub\u0026gt;i\u0026lt;/sub\u0026gt; = 2\u0026lt;sup\u0026gt;x\u0026lt;/sup\u0026gt;\u0026lt;/p\u0026gt;     create 5 unordered list element which are links using emmet\nul\u0026gt;(li\u0026gt;a)*5 + TAB\n  what happens when user enters nonsense in email input box?\npage will say something like \u0026ldquo;you forgot to put \\@\u0026rdquo; symbol bla bla bla\n  what value attribute does in input elements?\nit is the hardcoded value. here is the example;\n1 2 3 4 5  \u0026lt;!-- \u0026#34;GO!\u0026#34; will be written on submit button --\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;GO!\u0026#34; /\u0026gt; \u0026lt;!-- \u0026#34;deleteme first\u0026#34; will be written in input box --\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; value=\u0026#34;deleteme first!\u0026#34; /\u0026gt;     why name attributes need to be same in radio buttons\nif we don\u0026rsquo;t make them same then we can select more than one radio buttons. And this doesn\u0026rsquo;t make sense\n  what value attribute in elements actually do ?\nit returns that value when submitted. value is important in buttons, dropdown manus, checkboxes, radio buttons etc.\n  ","description":"","id":13,"section":"posts","tags":null,"title":"HTML Cheat Sheet","uri":"https://savolla.github.io/posts/html-cheat-sheet/"},{"content":"concepts JSON  javascript object notation data representation format used in config files supported types;  strings: \u0026ldquo;hello world\u0026rdquo;, \u0026ldquo;savolla\u0026rdquo; numbers: 10, 1.5, -30 boolean: true, false null: null arrays: [1,2,3], [\u0026ldquo;Hello\u0026rdquo;, \u0026ldquo;world\u0026rdquo;] objects: {\u0026ldquo;key\u0026rdquo;:\u0026ldquo;value\u0026rdquo;}, {\u0026ldquo;age\u0026rdquo;:30}   everything in json is valid javascript code  tips facts  best learningn resource : You Don\u0026rsquo;t Know JS  how to create a json file this is actually an array in javascript. this is why it starts with \u0026lsquo;[]\u0026rsquo;\n1 2 3 4 5 6 7 8 9 10 11 12 13  [ { \u0026#34;name\u0026#34;:\u0026#34;software engineering\u0026#34;, \u0026#34;delay\u0026#34;: 2, \u0026#34;book\u0026#34;: [ {\u0026#34;name\u0026#34; : \u0026#34;codecomplete2\u0026#34;}, {\u0026#34;name\u0026#34; : \u0026#34;codecomplete2\u0026#34;}, {\u0026#34;name\u0026#34; : \u0026#34;codecomplete2\u0026#34;}, {\u0026#34;name\u0026#34; : \u0026#34;codecomplete2\u0026#34;}, {\u0026#34;name\u0026#34; : \u0026#34;codecomplete2\u0026#34;} ] ]   display json contents in html  paste the json string inside script tag and make it a string by surroud it with ` use JSON.parse method to make JSON parsable with indexes   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;/\u0026gt; \u0026lt;title\u0026gt;MultiTasker\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; let topics = `[ { \u0026#34;name\u0026#34;:\u0026#34;software engineering\u0026#34;, \u0026#34;delay\u0026#34;: 2, \u0026#34;book\u0026#34;: [ {\u0026#34;name\u0026#34; : \u0026#34;codecomplete2\u0026#34;}, {\u0026#34;name\u0026#34; : \u0026#34;Applying UML\u0026#34;}, {\u0026#34;name\u0026#34; : \u0026#34;clean code\u0026#34;}, {\u0026#34;name\u0026#34; : \u0026#34;clean coder\u0026#34;}, {\u0026#34;name\u0026#34; : \u0026#34;solid principles\u0026#34;} ] } ]` console.log( JSON.parse(topics)[0].book) \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   from codecamp   print something on screen?\n1  console.log(\u0026#34;hello\u0026#34;);     declare a local variable?\n1  let loc = 5;     declare a global variable?\n1  glob = 5;     declare a constant variable?\n1  const c = 5;     declare a function scope variable?\n1  var c = 5;     concat two strings?\n1 2 3  let v0 = \u0026#34;Hello\u0026#34;; let v1 = \u0026#34;World\u0026#34;; let v2 = v0 + \u0026#34; \u0026#34; + v1;     you increment and decrement numbers\n1 2 3 4  let a = 3; a++; // increment  a--; // decrement  console.log(a);     declare floating point numbers?\n1  let f0 = 2.38;     get the length of a string?\n1 2  let name = \u0026#34;savolla\u0026#34;; console.log(name.length);     reach first letter of a string?\n1 2  let x = \u0026#34;hello\u0026#34;; console.log(x[0]);     get the last character of a string?\n1 2  let name = \u0026#34;savolla\u0026#34;; console.log(name[name.length - 1]);     create an array ?\n1  let numbers = [1,2,3,4,5];     create a multi-dimentional array?\n1 2 3 4  let A = [[\u0026#34;abatox\u0026#34;, 20], [\u0026#34;savolla\u0026#34;, 28], [\u0026#34;lena\u0026#34;, 48]]; console.log(A[1][0]);     append data into an array?\n1 2 3  let A = [1,2,3,4]; A.push(5); console.log(A[A.length -1 ]);     remove an item from an array?\n1 2 3  let A = [1,2,3,4]; A.pop(); console.log(A[A.length -1 ]);     remove first element from an array?\n1 2 3  let A = [1,2,3]; A.shift(); console.log(A);     add an element to the beginning of the array?\n1 2  let A = [1,2,3,4]; A.unshift(0);     define a functions?\n1 2 3 4 5 6  function sayHi( name ) { console.log(\u0026#34;Hello \u0026#34; + name); } sayHi(\u0026#34;lenacka\u0026#34;); sayHi(\u0026#34;savolla\u0026#34;); sayHi(\u0026#34;abatox\u0026#34;);     dequeue one element from an array?\n1 2 3 4 5  function dequeue( array ) { return array.shift(); } let A = [1,2,3,4,5]; console.log(dequeue(A));     write an if structure?\n1 2 3 4 5 6 7 8 9  if ( condition ) { // code  } else if ( condition ) { // code  } else { // code  }     use and and or operators in if statements?\n1 2  if ( code \u0026amp;\u0026amp; code || code ) code     create an object in js?\n1 2 3 4 5 6  var dog = { \u0026#34;name\u0026#34; : \u0026#34;Ares\u0026#34;, \u0026#34;color\u0026#34; : \u0026#34;brown\u0026#34;, \u0026#34;age\u0026#34; : 12, \u0026#34;personality\u0026#34; : \u0026#34;calm\u0026#34; };     access a property of an object ?\nuse dot notation\n1 2 3 4 5 6 7 8 9  var dog = { \u0026#34;name\u0026#34; : \u0026#34;Ares\u0026#34;, \u0026#34;color\u0026#34; : \u0026#34;brown\u0026#34;, \u0026#34;age\u0026#34; : 12, \u0026#34;personality\u0026#34; : \u0026#34;calm\u0026#34; }; n = dog.name; m = dog.age;     update an object property?\n1 2 3 4 5 6 7 8 9 10 11 12  dog = { \u0026#34;name\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;color\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;age\u0026#34; : null, \u0026#34;personality\u0026#34; : \u0026#34;\u0026#34; }; my_dog = dog; my_dog.name = \u0026#34;Ares\u0026#34;; my_dog.color = \u0026#34;brown\u0026#34;; my_dog.age = 12; my_dog.personality = \u0026#34;calm\u0026#34;;     delete a property from an object?\n1 2 3 4 5 6 7 8  var dog = { \u0026#34;name\u0026#34; : \u0026#34;Ares\u0026#34;, \u0026#34;color\u0026#34; : \u0026#34;brown\u0026#34;, \u0026#34;age\u0026#34; : 12, \u0026#34;personality\u0026#34; : \u0026#34;calm\u0026#34; }; delete dog.personality;     test if an object has a specific property?\nuse hasOwnProperty method of an object\n1 2 3 4 5 6 7 8 9 10  dog = { \u0026#34;name\u0026#34; : \u0026#34;Ares\u0026#34;, \u0026#34;color\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;age\u0026#34; : null }; if ( dog.hasOwnProperty(\u0026#34;color\u0026#34;) ) console.log(\u0026#34;yes\u0026#34;); else console.log(\u0026#34;no\u0026#34;);     access nested object properties?\n1 2 3 4 5 6 7 8 9  obj = { \u0026#34;p0\u0026#34; : \u0026#34;ABC\u0026#34;, \u0026#34;internal\u0026#34; : { \u0026#34;p0\u0026#34; : \u0026#34;abc\u0026#34;, \u0026#34;p1\u0026#34; : \u0026#34;def\u0026#34;, } } console.log(obj.internal.p0);     make a while loop?\n1 2 3 4 5  let i = 5; while ( i \u0026gt; 0 ) { console.log(i); i--; }     make a for loop?\njust like in C or C++\n1 2 3  for ( let i = 0; i \u0026lt; 5; ++i ) { console.log(i); }     lookup a value in an object list?\nwhen looking inside a list of objects use \u0026ldquo;[]\u0026rdquo; instead of \u0026ldquo;.\u0026rdquo;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  var contacts = [ { \u0026#34;first_name\u0026#34; : \u0026#34;Akira\u0026#34;, \u0026#34;last_name\u0026#34; : \u0026#34;Laine\u0026#34;, \u0026#34;number\u0026#34; : \u0026#34;05330000000\u0026#34;, }, { \u0026#34;first_name\u0026#34; : \u0026#34;Harry\u0026#34;, \u0026#34;last_name\u0026#34; : \u0026#34;Potter\u0026#34;, \u0026#34;number\u0026#34; : \u0026#34;05330000001\u0026#34;, }, { \u0026#34;first_name\u0026#34; : \u0026#34;Sherlock\u0026#34;, \u0026#34;last_name\u0026#34; : \u0026#34;Holmes\u0026#34;, \u0026#34;number\u0026#34; : \u0026#34;05330000002\u0026#34;, }, ] function lookup( name, property ) { for ( let i = 0; i \u0026lt; contacts.length; i++ ) { if ( contacts[i].first_name === name ) { return contacts[i][property] || \u0026#34;No such property \u0026#34; + property; } } return \u0026#34;No such contact\u0026#34;; } let prop = lookup(\u0026#34;Akira\u0026#34;, \u0026#34;number\u0026#34;); console.log(prop);     generate random number between 0 and 1?\n1  Math.random();     generate a whole random number between 0 \u0026amp; 100 ?\n1 2  let r = Math.floor( Math.random() * 100 ); console.log(r);     generate a whole random number between any range?\n1 2 3 4 5 6 7  function gen_rand( min, max ) { let r = Math.floor( Math.random() * (max - min) + min ); return r; } let x = gen_rand(50, 100); console.log(x);     convert a string to integer ? (stoi)\n1 2 3 4 5 6  let s = \u0026#34;54\u0026#34;; let q = \u0026#34;54\u0026#34;; console.log(s + q); /* outputs: 5454 */ s = parseInt(s); q = parseInt(q); console.log(s + q); /* outputs: 108 */     convert a string to integer with a special base?\n1 2  let m = \u0026#34;10010111001\u0026#34;; let n = parseInt(m, 2); /* outputs: 1209 */     prevent objects from mutation ?\nuse Object.freeze(MY_OBJ)\n1 2 3 4 5 6 7  const MATH_CONSTANTS = { PI : 3.141592, E : 2.718281, PHI : 1.61803399 } // const itself will not prevent mutation. need an extra step  Object.freeze(MATH_CONSTANTS);     make anonimous functions in js?\nthey also called arrow functions in js\n1 2  const magic = () =\u0026gt; new Date(); console.log(magic());     make anonimous functions with parameters?\nused s0 as a parameter below\n1 2  const stoi = (s0) =\u0026gt; parseInt(s0); console.log(stoi(\u0026#34;54\u0026#34;));     concat two arrays into one?\nuse concat\n1 2 3 4  let A = [1,2,3,4]; let B = [5,6,7,8]; A = A.concat(B); console.log(A);     check a number if it\u0026rsquo;s an integer ?\n1  Number.isInteger(123);     filter an array ?\nuse filter function\n1 2 3  let A = [1,2,3,4,5,6,7]; A = A.filter(x =\u0026gt; (x \u0026gt; 4)); console.log(A);     convert a string into an array of words?\n1 2 3  let s = \u0026#34;that was a dark and stormy night\u0026#34;; let words = s.split(\u0026#34; \u0026#34;); console.log(words);     run a function through array elements?\nuse map() function. it works like transform in C++\n1 2 3  let A = [1,2,3,4,5]; A = A.map(x =\u0026gt; x*2); console.log(A);     fill an array with random values?\n create an array with 10 elements fill the array with zeros map the array with random values   1 2 3  let A = new Array(10); A.fill(0); A = A.map(x =\u0026gt; Math.floor(Math.random() * 10));     create fixed size array like int A[100]; in C?\n1  let A = new Array(100);     use variables inside string template literals ?\nuse ${VAR_NAME}\n1 2 3 4 5  var Person = { \u0026#34;name\u0026#34; : \u0026#34;savolla\u0026#34;, \u0026#34;age\u0026#34; : 28 } let s = `Hello, my name is ${Person.name}`;     write a function that returns an object?\nthis is the best way to return an object\nhere is the long one\n1 2 3 4 5 6 7 8 9  function makeDog( name, age, color ) { return { name : name, age : age, color : color }; } ares = makeDog(\u0026#34;ares\u0026#34;, 12, \u0026#34;brown\u0026#34;); puki = makeDog(\u0026#34;puki\u0026#34;, 8, \u0026#34;white\u0026#34;);   here is the short one\n1 2 3  const makeDog = ( name, age, color ) =\u0026gt; ( {name, age, color} ); ares = makeDog(\u0026#34;ares\u0026#34;, 12, \u0026#34;brown\u0026#34;); puki = makeDog(\u0026#34;puki\u0026#34;, 8, \u0026#34;white\u0026#34;);     make objects have methods?\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  const circle = { x : 0, y : 0, grow : function() { this.x++; this.y++; }, shrink : function() { this.x--; this.y--; }, eliptic : function( px, py ) { this.x = px; this.y = py; } }     create a constructor of a class?\njust like in C++\n1 2 3 4 5 6 7 8  class veggie { constructor(name) { this.name = name; } } cabbage = new veggie(\u0026#34;cabb\u0026#34;); console.log(cabbage.name);     import a specific function from another js file?\nit\u0026rsquo;s like from matplotlib import pyplot in python\n1  import { function_name } from \u0026#34;path/to/file\u0026#34;   notice that we didn\u0026rsquo;t use file extension in path/to/file\n  flashcards   4 ways to declare a variable?\n1 2 3 4  var a = \u0026#34;savolla\u0026#34;; // function scope variable  let a = \u0026#34;savolla\u0026#34;; // local variable  const pi = 3.141592 // constant variable  x = 87; // global variable     what are function scope variables?\nthey are global just in function scope\n1 2 3 4 5 6 7 8  function f() { for ( let i = 0; i \u0026lt; 5; ++i ) { var f_global = 10; } console.log(f_global); } f();     do javascript confused with integer division?\nNo. it can output floats when dividing two integers\n1 2 3 4  let a = 7; let b = 2; let c = a / b; console.log(c);     do javascript support compound operators?\nYes.\n1 2 3 4 5  let a = 3; a += 2; a -= 2; a *= 3; a /= 2;     what to do if there are double quotes inside a string?\nsingle quote that string to avoid escaping\n1  let ling = \u0026#39;\u0026lt;a href=\u0026#34;https://www.example.com\u0026#34;\u0026gt;Click\u0026lt;/a\u0026gt;\u0026#39;;     can we change a specific character in a string by indexy?\nNo. strings are immutable\n1 2  let name = \u0026#34;vavolla\u0026#34;; name[0] = \u0026#34;s\u0026#34;; // FIXME: ERROR     can we also store expressions into an array?\nYes!\n1 2 3  let multi = [2==2, 2==1]; console.log(multi[0]); console.log(multi[1]);     can we modify arrays using bracket notation?\nYes! this does not work with strings but arrays are okay with that\n1 2 3 4  let A = [\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;]; A[0] = \u0026#39;x\u0026#39;; A[1] = \u0026#39;y\u0026#39;; A[2] = \u0026#39;z\u0026#39;;     what happens if we pop a multi-dimentional array?\n1 2 3 4 5  let A = [[1,2], [3,3], [4,5]]; A.pop(); console.log(A);     can we remove curly brackets from single lined if ?\nYes! javascript allows that\n1 2  if ( condition ) x = 10;     how == operator behaves in javascript?\nit can compare values type independent\n1 2 3 4 5 6  let a = \u0026#39;3\u0026#39;; let b = 3; if ( a == b ) console.log(\u0026#34;yes\u0026#34;); else console.log(\u0026#34;no\u0026#34;);     how = operator behaves in javascript?\nit works like == but this time it compares same types\n1 2 3 4 5 6  let a = \u0026#39;3\u0026#39;; let b = 3; if ( a === b ) console.log(\u0026#34;yes\u0026#34;); else console.log(\u0026#34;no\u0026#34;);     what is the opposite of = operator ?\n1  !==     how switch statements work in js?\njust like in C++ :)\n  iterate nested loops\n1 2 3 4 5 6 7 8  A =[]; for ( let i = 0; i\u0026lt;3; ++i ) { A.push([]); for ( let j = 0; j\u0026lt;3; ++j ) { A[i].push(j); } } console.log(A);     example of contacts list with js objects\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  var contacts = [ { \u0026#34;first_name\u0026#34; : \u0026#34;Akira\u0026#34;, \u0026#34;last_name\u0026#34; : \u0026#34;Laine\u0026#34;, \u0026#34;number\u0026#34; : \u0026#34;05330000000\u0026#34;, }, { \u0026#34;first_name\u0026#34; : \u0026#34;Harry\u0026#34;, \u0026#34;last_name\u0026#34; : \u0026#34;Potter\u0026#34;, \u0026#34;number\u0026#34; : \u0026#34;05330000001\u0026#34;, }, { \u0026#34;first_name\u0026#34; : \u0026#34;Sherlock\u0026#34;, \u0026#34;last_name\u0026#34; : \u0026#34;Holmes\u0026#34;, \u0026#34;number\u0026#34; : \u0026#34;05330000002\u0026#34;, }, ] for ( let i = 0; i\u0026lt; contacts.length; ++i ) { console.log(contacts[i].first_name); console.log(contacts[i].last_name); console.log(contacts[i].number); }     does javascript allow us to use ternary operators?\nYes!\n1 2 3 4 5  let a = 2; let b = 7; let c; a \u0026gt; b ? c = 3 : c = 1; console.log(c);     how to do nested ternary operator?\n1 2 3 4 5  function sign( n ) { return n \u0026gt; 0 ? \u0026#34;+\u0026#34; : n \u0026lt; 0 ? \u0026#34;-\u0026#34; : \u0026#34;0\u0026#34;; } console.log(sign(-32)); // outputs: -     can we change values of const array?\nYes! I don\u0026rsquo;t know why but yes we can!\n1 2 3 4  const s = [1,2,3,4,5]; s[0] = 111; s[4] = 112; s[2] = 113;     which higher order functions javascript have?\n1 2 3 4 5  filter(); map(); sort(); split(); reduce();     what higher order function can be used to sum every element in an array?\nuse reduce()\n1 2 3  let A = [1,2,3,4,5]; A = A.reduce((result = 0, x) =\u0026gt; result += x); console.log(A);     what the rest operator does?\nit let\u0026rsquo;s us to call functions with infinite arguments. when it\u0026rsquo;s used in function parameters, it treats arguments as array\n1 2 3 4  function sum(...args) { return args.reduce( (x, result = 0) =\u0026gt; result += x); } console.log(sum(1,2,3,4,5,6)); // outputs: 21     what is destructuring technique ?\nit\u0026rsquo;s a shortcut for assigning Object properties to another Object\n1 2 3 4 5 6 7 8 9 10 11  var dog = { \u0026#34;name\u0026#34; : \u0026#34;ares\u0026#34;, \u0026#34;color\u0026#34; : \u0026#34;brown\u0026#34;, \u0026#34;age\u0026#34; : 12 }; var NEW_DOG = { \u0026#34;name\u0026#34; : a, \u0026#34;color\u0026#34; : b, \u0026#34;age\u0026#34; : c } = dog;     what are the benefits of string template literals ?\n variables can be used inside the string. without concatination double quotes can be used without escaping them new lines treated as new lines. so we can make multi-line strings    how private class members look in js?\nuse underscore before the name\n1 2 3 4 5  class Person { constructor(name) { this._name = name; } }     problems \u0026amp; solutions ","description":"","id":14,"section":"posts","tags":null,"title":"Javascript Cheat Sheet","uri":"https://savolla.github.io/posts/javascript-cheat-sheet/"},{"content":"ourput redirection  you can redirect outputs of a shell command in vim  press ESC :r !ls -la RET    whitespace removal  remove all trailing whitespaces. you can also make the following a permanent macro  press ESC :%s/\\s\\+$//e RET    time travel  show the file 10 mins ago  press ESC :earlier 10m RET   show the file after 10 mins  press ESC :later 10m RET    ","description":"","id":15,"section":"posts","tags":["vim","howto","tools"],"title":"less known vim tricks","uri":"https://savolla.github.io/posts/less-known-vim-tricks/"},{"content":"Making Embedded Systems Türkçe kitap özeti\nBölüm 0  microcontroller: kendi içinde, RAM\u0026rsquo;i kod hafızası yani FLASH (ROM, EEPROM) ve bir işlemcisi olan bütün bir cihazdır DSP: özelleşmiş bir microcontroller\u0026rsquo;dır. ana amacı, gelen analog bir sinyali işleyip ilginç sonuçlar elde etmektir. Normal microcontrollerlardan farkı, matematiksel işlemleri çok daha hızlı yapabiliyor olmasıdır.  Bölüm 1  Gömülü Sistem: tek bir amaç için tasarlanmış, içinde bir yazılım barındıran, genel amaçlı bir bilgisayara göre çok daha az işlem gücü ve hafızaya sahip cihazlara denir. gömülü sistemlerde, işlemciler normal bilgisayarların işlemcilerine göre daha yavaş çalışırlar ki güç tüketimi az olsun. RAM açısından da aynı şekilde daha zayıftır ki maliyeti daha az olsun. yazılımın da bu kısıtlı imkanlarda doğru bir şekilde çalışması gerekir. O kadar doğru çalışması gerekir ki örneğin bir kalp pilinde her hangi bir bug, ölümle sonuçlanabilir. Bir uçağın elektronik devresinde en ufak bir yazılım hatası, onca insanın ölümüne yol açabilir  Compilerlar, OOP ve Yazılım dilleri  çoğu büyük MCU üreticisi, cross-compiler olarak GNU araçlarını kullanır gömülü yazılım çoğu kez C dilini destekler. C++ gibi diller kısmen desteklenir. Genelde cross-compilerlar C++ için çoklu kalıtım, templateleri vs desteklenmez Java için artan bir destek var ancak Java\u0026rsquo;yı destekleyen bir sistemin genelde büyük bir sistem olması gerekir. dar ve ucuz alanlarda C hala hüküm sürer kullanacağın dile takılma. dizayn ve mimari çok çok daha önemli  Gömülü Yazılım Geliştirmek Debugging  yazılımı başka bir platform için yazdığımızdan dolayı, yazılımı, kod yazdığımız bilgisayarda debug edemeyiz. Bunun için cross debugger\u0026lsquo;lar kullanılır cross debugger\u0026rsquo;ın çalışması için JTAG\u0026rsquo;e ihtiyacın var. Bu kendi başına bir cihaz ve fiyatı 500 lira civarında. ama platforma göre değişir. örneğin STM\u0026rsquo;in ST-Link diye onboard bir debuggerı var cross compiler senin bilgisayarında çalışıp, JTAG ile haberleşir. JTAG ise senin üstünde uğraştığın MCU\u0026rsquo;nun JTAG arayüzüne bağlanır. oradan debug yapar bir donanımın debugging desteklemesi, onu ekstra pahalı yapar. ayrıca debug işlemi genelde problemli olduğu için, donanımlar çok basit seviyede debugging desteklemektedirler kısaca işlemciler/mikrodenetleyiciler, debug destekler ancak öyle bir Java ya da C# debug ederkenki performans ve özellik beklememek gerek kod yazdığın PC ile hedef platform arasında debugger bağlantısı kuran alete, emulator denir. JTAG bunlardan biridir. çoğu gömülü sistem donanımı printf tabanlı debuggingi destekler. bazen kullanılmayan bir I/O portundana bir LED bağlayıp belli durumlarda bir işlevin gerçekleşip gerçekleşmediğini kontrol etmek için o LED yakıp söndürülür. bir emulator satın almak yerine bu tarz çözümler mevcuttur Yine de gömülü sistemleri debug etmek, her şeyin düzgün çalışacağı anlamına gelmez. bazı buglar vardır ki debugging işlemi bittikten sonra kendini gösterir\u0026hellip;  Zorluklar  gömülü alanda kısıtlayıcı nitelikler;  RAM (memory) ROM (code space) CPU speed battery life çevre birimler (peripherals)   üzerinde uğraştığın donanımı çok iyi bilmen gerek. çünkü eğer donanımın desteklemediği bir şeyi yaptırmaya çalışırsan, donanıma zarar verme ihtimalin var.  Zorlukların Üstesinden Gelmek  sistemi modüllere böl modüller arasına interface\u0026lsquo;ler koy ki modüller birbirlerine bağlı kalıp coupling\u0026lsquo;i arttırmasın gömülü sistemlerde sistemi modüllere bölmek çok daha kolaydır. örneğin bir X sensörü Y haberleşme kanalından Z ile haberleşiyorsa, demek ki bunların hepsi farklı objelerdir yani farklı modüllere aittirler. sırasıyla X, Y ve Z diye 3 ayrı modül oluşturulabilir modüllere ayırmak\u0026rsquo;da kullanılan temel soru şu; \u0026ldquo;bu kısım kendi başına bağımsız bir donanım/protokol mü?\u0026rdquo;. sorunun cevabı evet ise o parça için farklı modül oluşturulur modüller kendi başlarına test edilebilir. Böylelikle kod kalitesi ve \u0026ldquo;maintainabiliry\u0026rdquo; artmış olur modüllerin arasına interface koymayı unutma. direk pound include kötü fikir her zaman test ve dökümantasyon yaz kodu ilk zaman için küçük ve optimize yazmaya çalışma. donanımın kısıtlı olduğu bir alanda bu şekilde çalışmanın gerekli olduğu düşünülür ancak çoğu problem ve bug buralardan gelebilir. onun yerine şu adımları izle;  çalışan basit bir kod yaz kodu test et dökümante et tüm testlerden geçtiyse, optimizasyon işlemine geç  adıma git      Bölüm 2 ","description":"","id":16,"section":"posts","tags":["book"],"title":"Making Embedded Systems Notlarım","uri":"https://savolla.github.io/posts/making-embedded-systems-notes/"},{"content":"here! you found it! this is one single Makefile that fits all projects with this file structure:\n1 2 3 4 5 6 7 8 9  project / ├── include ├── build ├── lib ├── obj ├── src ├── test ├── main.c └── Makefile   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  TARGET_EXEC ?= a.out BUILD_DIR ?= ./build SRC_DIRS ?= ./src SRCS := $(shell find $(SRC_DIRS) -name *.cpp -or -name *.c -or -name *.s) OBJS := $(SRCS:%=$(BUILD_DIR)/%.o) DEPS := $(OBJS:.o=.d) INC_DIRS := $(shell find $(SRC_DIRS) -type d) INC_FLAGS := $(addprefix -I,$(INC_DIRS)) CPPFLAGS ?= $(INC_FLAGS) -MMD -MP $(BUILD_DIR)/$(TARGET_EXEC): $(OBJS) $(CC) $(OBJS) -o $@ $(LDFLAGS) # assembly $(BUILD_DIR)/%.s.o: %.s $(MKDIR_P) $(dir $@) $(AS) $(ASFLAGS) -c $\u0026lt; -o $@ # c source $(BUILD_DIR)/%.c.o: %.c $(MKDIR_P) $(dir $@) $(CC) $(CPPFLAGS) $(CFLAGS) -c $\u0026lt; -o $@ # c++ source $(BUILD_DIR)/%.cpp.o: %.cpp $(MKDIR_P) $(dir $@) $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $\u0026lt; -o $@ .PHONY: clean clean: $(RM) -r $(BUILD_DIR) -include $(DEPS) MKDIR_P ?= mkdir -p   ","description":"","id":17,"section":"posts","tags":["tools","make","programming"],"title":"one Makefile for everything","uri":"https://savolla.github.io/posts/one-makefile-for-everything/"},{"content":"this is a short step by step tutorial to save your vim macro and use it everytime\n fire up vim do q a create your macro press q to finish exit vim :q! vim ~/.vimrc type let @q = '' put your cursor on first single quote do \u0026quot; a p macro should be pasted inside single quotes like:   1  let @q = \u0026#39;your_macro_content\u0026#39;    save and exit ESC :wq fire up vim again do @ q  now you should have your macro saved. after this moment everytime you open a vim session, this macro will be read from .vimrc and you will able to use it.\n","description":"","id":18,"section":"posts","tags":["vim","howto","tools"],"title":"permanent macros in vim","uri":"https://savolla.github.io/posts/permanent-macros-in-vim/"},{"content":"Bölüm 1 Gömülü Sistem Nedir  Gömülü sistemler genelde daha büyük bir sistemin parçası olurlar. örnek olarak bir araba içindeki sistemler; fren sistemi ya da hava yastığı sistemi için olan devrenin içindeki yazılım bir gömülü sistemdir Genel amaçlı bir bilgisayarın içinde de gömülü sistemler mevcuttur; klavye, mouse, hard drive, ses kartı. Bunların hepsi kendi başına içinde küçük yazılımlar olan tek başına gömülü sistemlerdir  Donanım  Gömülü sistemlerin tarihi ilk olarak 1971\u0026rsquo;de Intel\u0026rsquo;in Japon bir firma için ürettiği 4004 mikroişlemcisi ile başlıyor. ilk mikroişlemcidir bu. işlemci gücü MIPS ile ölçülür (Millions of Instruction Per Second) işlemci gücünü etkileyen bir başka özellik de register boyutudur. 8-bit ya da 16-bit işlemcilerin register boyutları da sırasıyla 8 ve 16 bittir 8-bit işlemci, yalnızda 256 byte kadar RAM destekler çünkü \\(2^8=256\\) 16-bit işlemci ise 64KB RAM destekleyebilir: \\(2^{16}=65536\\) ise \\(65536\\div1024 = 64\\) 32-bit, 4GB RAM 64-bit, 4PB ancak 64-bit sistemler çok fazla RAM desteklediği için şu anda dünyada bu kadar RAM\u0026rsquo;e sahip bir makine yok (mu acaba?). Bu yüzden çoğu CPU üreticisi adreslenebilecek miktarı 1 TB olarak ayarlayıp -ki hala çok yüksek RAM- bit sayısını 50 yaparlar; \\(2^{50}\\div1024^4=1TB\\) 8-bit cihazların yaşam ömrü şaşırtıcı:\n Dijital saatler gibi cihazlar ve buna benzer gömülü sistemler RAM\u0026rsquo;e gerek duymayıp, CPU\u0026rsquo;nun kendi registerlarını kullanabilir. Dijital saatler 8-bit CPU kullanabilir Oyun konsolu tasarlayan mühendisler, konsolun maliyetini ucuzlatmak adına, hafıza ve diğer pahalı birimleri dışardan takılabilir olarak üretirler. Bu sayede konsolun maliyeti düşerken, oyunların maliyeti yükselir. Bunun bir örneği Ateri Kasetlerinde görülür  Diller  C dilinin yazılış amacı, low level bir dil oluşturmaktır C\u0026rsquo;nin gömülü sistemler için en avantajlı 2 yanı vardır;  neredeyse her işlemci için kod üretebiliyor olması donanımla bu kadar kolay konuşabiliyor olması   Assembly, C++, Ada, Rust, µPython, Java diğer Gömülü alanlarda kullanılan dillerdendir Assembly, donanımın tam kontrolünü ele alır, çok hızlı çalışır ancak kodu başka bir işlemciye port edemezsin. kod çok uzundur ve okuması zordur C++, C diline bir de Object Oriented özellikler ve bir çok Abstraction eklemiştir ve bu yazılım geliştirme açısından çok verimli bir dil olmasına neden olmuştur. Ancak bu özellikler, kodun çalışmasını kötü yönde etkilemiştir ve C kadar hızlı olamamasına sebep olmuştur. C++\u0026lsquo;a özgü özellikler, büyük projelerde iyi rol oynayabilir ancak örneğin bir dijital saat gibi basit bir gömülü sistemde çok da ihtiyaç yoktur Ada, Gömülü sistemlerde önemli bir dildir. C++ yerine kullanılabilecek bir dil olma niteliğindedir. Kullanım alanı daha çok Amerikan Savunma Sanaiinden dışarıya çıkamadığı için yine popülaritesini kaybeden şanssız dillerdendir  Bölüm 2   Gömülü sistemlerde \u0026ldquo;hello world\u0026rdquo; programı, çoğu zaman bir LED\u0026rsquo;i 1 Hz hızında yakıp söndürmektir.\n  delay fonksiyonlarında kullanılan sadece bir sayacı sıfıra kadar geriye sayan C kod yapısı şu şekilde kısaca kurulabilir;\n1 2  int i = 100; while (i--);     basit bir LED yanıp söndürme programı;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  #define LED_GREEN 0x40  #define P2LTCH 0xFF5E  void delay( unsigned int nMilliseconds ); void toggleLed( unsigned char ledMask ); void main(void) { while (1) { toggleLed(LED_GREEN); delay(500); } } void delay( unsigned int nMilliseconds ) { #define CYCLES_PER_MS 260  unsigned long nCycles = nMilliseconds * CYCLES_PER_MS; while (nCycles--); } void toggleLed( unsigned char ledMask ) { asm { mov dx, P2LTCH in al, dx mov ah, ledMask xor al, ah out dx, al } }     Gömülü yazılımların, diğer saf yazılımlardan farkı, daima sonsuz bir döngü ile bitiyor olmasıdır\n  Cihazlar ya resetlenene kadar ya da bozulana kadar çalışmaya devam ederler\n  Bölüm 3   compiler, linker gibi toolların içinde bulunduğu paket halindekii programa, toolchain denir\n  Malesef her platform için kullanılan toolchain farklılık gösterir. ARM için farklı, Atmel, Microchip için farklı toolchainler kurulması gerekir\n  kaynak kodu, bir gömülü sistemde çalışabilir bir yazılıma dönüştürmek için şu 3 adım izlenmesi gerekir;\n her kaynak dosyasının compile edilip object dosyasına dönüşmesi birinci adımda oluşan her object dosyasının bir linker ile bağlanıp tek bir obje dosyasına dönüşmesi. üretilen bu son dosyaya relocatable program denir relocatable program, bir locator ile hedef gömülü sistemde çalıştırılabilir bir dosyaya dönüştürülür      bazı eski işlemciler. bu işlemciler 2000\u0026rsquo;lerde beyaz eşya, otomobil vs gibi ürünlerin yapımında kullanılan işlemcilerdir;\n Fujitsu SPARClite Hitachi H8/300 Hitachi H8/300H Hitachi H8/S Hitachi SH IBM/Motorola PowerPC Intel i960 MIPS R3xxx MIPS R4xx0 Mitsubishi D10V Mitsubishi M32R/D Motorola 68k Sun Sparc Sun MicroSPARC Toshiba TX39    object dosyalarının belli başlı formatları vardır. bunlardan ikisi COFF ve ELF\u0026rsquo;dir. COFF (Common Object File Format), ELF (Extended Linker Format)\n  eğer bir gömülü sistem projesinde birden çok dil ya da compiler kullanılacaksa object dosyalarının formatlarının aynı olmasına dikkat edilmelidir. aksi taktirde linker farklı formatlardaki obje dosyalarının bağlayamayabilir\n  bir obje dosyası 3 temel kısımdan oluşur;\n text bu kısımda kodun kendisi yer alır data global değişkenler burada yer alır bss henüz değer atanmamış ve static değişkenler burada bulunur    kaynak dosyalarında bazen extern komutu ile başka kaynak dosyalarındaki değişkenler referans verilebilir. linkleme sırasında bu komutlarda tarif edilen değişkenleri yerine koymak, linkerın görevidir\n  linking   linker, obje dosyalarında bulunan text, data ve bss bölümü tek bir dosya içine yazar ve extern komutuyla tarif edilen değişkenleri yerine koyar\n  linker\u0026rsquo;ın kendi scripting dili vardır. bu dil sayesinde kod bölümleri (text, data, bss) birbiriyle istendiği gibi bağlanıp, istenen bölümler başka bölümlere aktarılabilir\n  startup code   yarın öbür gün bir C ya da C++ programındaki main() fonksiyonundan önce gerçekleşen işlemler sorulduğunda - ki gömülü sistemler iş mülakatlarında bunlar sorulur - startup kodunda neler olup bittiğini bilmek faydalı olacaktır\n  yazılım geliştirme araçlarının geleneksel olarak yaptıkları işlemlerden biri, programın önüne bir startup kodu yerleştirmektir\n  startup kodu, o platforma özel olan Assembly diliyle yazılıp, daha yüksek seviyeli dillerin çalışması için uygun bir ortam hazırlar\n  her yüksek seviyeli dil, çalışmak için değişik kriterlere ihtiyaç duyar. örnek olarak C ve C++, main() çağırılmadan önce startup kodunun, stack\u0026lsquo;i ayarlamasına ihtiyaç duyar. stack oluşturulmazsa C ve C++ kodu çalışamaz. Bu sadece C ve C++ için gereken işlemlerden sadece biridir\n   ","description":"","id":19,"section":"posts","tags":["book"],"title":"Programming Embedded Systems Notlarım","uri":"https://savolla.github.io/posts/programming-embedded-systems-notes/"},{"content":"This is how I use doom emacs for daily coding. Doom and it\u0026rsquo;s packages are working together to make developer\u0026rsquo;s life easy. Here I made a complete list for you guys. This is a step by step guide to do coding on doom emacs. By the way when I say things like C-c C-p it means CTRL + c + p\nbefore we start to make things work enable specified modules in your init file\n do SPC f p and select init.el enable(uncomment) the following modules;  magit treemacs lookup   reload doom by doing SPC h r r  cloning projects  SPC g C to run magit clone press u to specify repo url paste your url with Ctrl Shift v (for linux) specify the path for the repo press y to make origin default branch wait until the cloning is finished press q to quit  adding projects  SPC o p to open treemacs C-c C-p a specify the path for your porject now you see your project directory appeared in your treemacs menu  navigate files  SPC SPC brings menu with all files under your project root type any keyword you want  you don\u0026rsquo;t have to type entire file name. menu items will be reduced once you type some characters.\nfind symbols (method, variable, objects)  press SPC / type your keyword or function, variable, class or struct names. once you enter the keyword, doom will jump to that file instantly C-o to go back C-i to go forward  recent files if you work on other things other than your project, for example editin some config files while coding etc, then you probably type the file path every single time to navigate to that config file. doom solves it with\n SPC f r brings a menu or recently visited files find and navigate C-o to go back C-i to go forward  lookup code sometimes we can\u0026rsquo;t find a good documentation on a method/module when coding. the best way to understand something is to looking at examples\n navigate your cursor on method, module you want to understand do SCP s o choose Github before hitting RET you can optionally specify the following items for more accurate results;  filename: path: extension:    here is an example for searching printf on github\n printf extension:.c filename:main.c path:src\n find and replace projectwise you can change a variable or method name projectwise. this is usefull in code refactoring. here is how to do that in doom;\n SPC / enter the symbol name. \u0026ldquo;emacs\u0026rdquo; in this example C-c C-e :%s/emacs/doom/g RET Z Z  there must be an easier way..\n","description":"","id":20,"section":"posts","tags":["tools","doom","emacs","programming","howto"],"title":"programming in doom emacs","uri":"https://savolla.github.io/posts/programming-in-doom-emacs/"},{"content":"key bindings normal mode 1 2 3 4 5 6 7 8 9 10 11  V # enter visual mode and show hexdump view aaa # analyse the binary. unlocks other functions. do this first you open up a binary aaaa # experimnetal analysis. might take more time for huge binaries afl # see all funcitons (also called symbols) in the binary afll # really cool color coded function list s \u0026lt;FUNCTION\u0026gt; # seek to \u0026lt;FUNCTION\u0026gt; ii # show imports don\u0026#39;t forget to analyse first iS # show sections in memory is # show all symbols including global, local variables iz # show ascii strings iI # general binary information   visual mode 1 2 3 4 5 6  p # disassembler view pp # debuggin view ppp # byte distribution view pppp # byte string view for copying in C or Pyhton n # seek to next function N # seek to previous funciton   how to   jump to a function from debug or disassembler view\n use j/k keys to navigate on call instruction when call instruction is on the top press \u0026lt;ENTER\u0026gt; key hit u to come back    see hex dump of a function from disassembler view\n navigate to call just like you do for jumping to funciton press \u0026lt;Shift\u0026gt; p come back with p    see where a specific function is called across the binary using xref\n  from visual mode\n seek to the function you want to see where it\u0026rsquo;s called press \u0026lt;ENTER\u0026gt; key do :axt    from normal mode\n s \u0026lt;FUNCTION*NAME\u0026gt; axt  this iformation can also be seen from visual mode above function name. also if you want to\nsee jumps from a function. use axf\n    patch a binary\n r2 -w \u0026lt;BINARY\u0026gt; open the binary with write permissions aaa analyze V enter visual mode p go to disassembler view :s \u0026lt;ADDRESS*TO*MODIFY\u0026gt; seek to address you want to modify :e asm.var.sub=false \u0026ldquo;[var*4h]\u0026rdquo; notations don\u0026rsquo;t work when modifying. change to [rbp - 4] A enter modification mode and write new instruction in assembly hit \u0026lt;ENTER\u0026gt; two times and done additionally you can set `asm.var.sub` back to true if you want    how to debug a binary\n r2 -d \u0026lt;BINARY\u0026gt; open binary with debug mode V enter visual mode pp enter disassembler view additionally you can increase the stack size if you want with :e stack.size=256 \u0026lt;F8\u0026gt; next instruction \u0026lt;F7\u0026gt; step into call db \u0026lt;FUNCTION|ADDRESS\u0026gt; set brakepoint dc continue. hits the first breakpoint it encounters do reopens binary. saves breakpoints so you don\u0026rsquo;t have to set them everytime in case you lost hit . to come back to *ip*(instruction pointer) dsf step until end of frame. this is handy when you accidentally step into a function    info  most visual mode keys have a command equivalent to show hex dump in non-visual mode use +*px \u0026lt;BYTE*AMOUNT\u0026gt;** most function won\u0026rsquo;t work in radare2 until you analyze the binary. use +*aaa** and aaaa for experimental analysis. you can use normal mode commands in visual mode as well. use +*:** when you wanna run some r2 commands with +*iI** some important information like nx*(non-executable stack), *canary, *pic*(position independent code) can be seen if pic is true then the file will randomize base address for every run use ~.. to pipe output to less like shell  tips  always use -A argument when opening a binary with radare. so you don\u0026rsquo;t have to do\naaa everytime. -AA also can be used bug takes long time on huge binaries  ","description":"","id":21,"section":"posts","tags":null,"title":"radare notes","uri":"https://savolla.github.io/posts/radare-notes/"},{"content":"Here I made some album recommendations. this is my personal playlist which consists of very \u0026ldquo;non-normie\u0026rdquo; stuff. albums in this list will start with the most \u0026ldquo;normie\u0026rdquo; music and will incrementally get heavier\nlevel 1 easier to digest and fun\n Tokyo Rose - Chases 2   great synthwave album.. my favorite song on this is midnight chase\n Dance with the Dead - Loved to Death  synthwave + some metal elements. great if you like distortion guitar riffs. this one includes awesome guitar solos. and the production is just incredible\n ALIX 2084 (EP)  directly jump to Elevator Dance Party song. great work and really underrated. those tempo changes will shake your brain inside\n Mega Drive - Hardwired V1.4  Dataline Dataline Dataline !!\n Aphex Twin - Selected Ambient Works 85-92  legent album from a legend\n Plini - Sweet Nothings  I bet this will be the sweetest thing you will ever listened. your ears will overflow with candies\nlevel 2 still electronic but with some interesting elements\n Heptaedium - \u0026ldquo;A M E N\u0026rdquo;  did you ever listened to break core? edgy..\n Aphex Twin Live at Field Day  did you ever experienced ear bleeding? just skip to 1:51:00 and wait.\nlevel 3 still electronic but.. this time adding depression\n Boards of Canada - Twoism  this album might look harmless but wait until your soul evaporates completely\n Hrsta - Ghosts Will Come And Kiss Our Eyes  don\u0026rsquo;t listen to this if you lost someone recently\n The LONGING - Original Soundtrack  wait 400 days\nlevel 4 dark ambient passage. contains some depressive and horror materials. you also might want to stop there and enjoy 1st, 2nd and 3rd levels because things get non-normie here\n Gates of Morheim - Omagatoki  contains ethnic sounds. it\u0026rsquo;s like a ritual music + dark ambient elements\n Kurotokage - Call To The Deep  similar to Gates of Morheim but deeper and darker. this album will make you dizzy and tired\n Atrium Carceri - Kapnobatai  things get serious and deep after this. especialy after the track called \u0026ldquo;A Stroll Through the Ancient City\u0026rdquo;\n Alt3r3d Stat3 - Dubbed in Black  paranormal stuff\nlevel 5 \u0026ldquo;guitars and drums\u0026rdquo; era begins but without vocals. gets heavier and heavier\n Modern Day Babylon - Travelers  my first djent album. this is the first metal album without vocals on this list\n Amogh Symphony - The Quantum Hack Code\nawesome concept album. there are some Indian ethnic elements on that one. good one. Heptaedium - KAWAII!!  underrated stuff. has some djenty elements also inherits from nintendo core genre. really interesting album\n Heptaedium - Underground Business  have some edgy songs. heavier than the first one KAVAII!!\n The Helix Nebula - Meridian  now we\u0026rsquo;re talking..\n Infant Annihilator - The Palpable Leprosy of Pollution  this will beat the shit out of your ears..\nlevel 6 vocals come to play. death metal, technical death metal stuff. list gets heavier and heavier.\n Dissonance In Design - Sentient   technical death metal album but without crazy riffs\n Konkeror - The Abysmal Horizons  just heavy.. skip to \u0026ldquo;Towers\u0026rdquo; song you\u0026rsquo;ll get what i mean\n Bloodbath - Live At Wacken 2005  this is the best metal live performance\n Edge of Sanity - Crimson  this album contains only one song\n Bloodbath - Unblessing The Purity  blasting the virginborn\n Ouroboros - Glorification of a Myth  fine album. lots of solos and great (hard to play) guitar riffs\n Krallice - Diotima  actual masterpiece. check Telluric Rings song if you still with me\n Krallice - Dimensional Bleedthrough  I like those feedbacks man..\n The Zenith Passage - Cosmic Dissconance  i don\u0026rsquo;t know in which category should I put this album\n Inferi - The Path of Apotheosis  this is one of those albums when your entire body chills. guitars sound awesome and played by highly skilled musicians. those tremolo pickings man..\n First Fragment - Dasein  this album contains some guitar techniques\u0026hellip;\n Rings of Saturn - Embryonic Anomaly  brain drill but with major scales\n Spawn Of Possession - Incurso  wait until \u0026ldquo;Bodiless Sleeper\u0026rdquo; song\nlevel 7 deepest depths of hell..\n Vital Remains - Icons of Evil  extremely satanic and brutal. those harmonic minor scales will blow your mind. this album is the first one on this list because of it\u0026rsquo;s melodic elements. next ones are not melodic anymore\n Severe Torture - Slaughtered  brutality takes another form\n Cryptopsy - None So Vile  insane vocals and drums\n Abominable Putridity - The Anomalies Of Artificial Origin  Russians know that stuff.\n Extermination Dismemberment - Serial Urbicide  heaviest thing i\u0026rsquo;ve ever heard\n","description":"","id":22,"section":"posts","tags":["music"],"title":"savolla's music recommendations","uri":"https://savolla.github.io/posts/music-recommendations/"},{"content":"  for example I\u0026rsquo;m searching for \u0026ldquo;setq\u0026rdquo; keyword which exists in \u0026ldquo;.doom.d\u0026rdquo; directory, file is called \u0026ldquo;config.el\u0026rdquo; and is written in \u0026ldquo;Emacs Lisp\u0026rdquo; language\n  go to github search\n  search for the following string\n1  setq extension:el path:.doom.d filename:config.el language:\u0026#34;Emacs Lisp\u0026#34; extension:.el     ","description":"","id":23,"section":"posts","tags":["howto","tools","git"],"title":"search code in Github","uri":"https://savolla.github.io/posts/search-code-in-github/"},{"content":" also called gnu privacy guard this is a key which helps to encrypt and decript files there are 2 types of gpg keys; private : unlocks everything you lock with that public : you send to other people gpg keys expire ! so you need to generate them once or twice a year  how to generate a gpg key   first generate personal key:\n1  gpg --full-gen-key     choose RSA and RSA\n  choose 4096 for maximum security\n  choose y = 1 to make the key expire in one year\n  enter your real name and surname\n  enter your email\n  confirm\n  enter a password. this is the password of your key. DON\u0026rsquo;T FORGET IT\n  encrypt files with gpg   navigate to directory you want to encrypt (here I generate a random file)\n1  echo \u0026#34;secret message\u0026#34; \u0026gt; ~/secret-file.txt     encrypt the file\n1 2 3  # -r : recepient (in this case me) # -e : file to encrypt gpg -r your_mail@provider.com -e secret-file.txt   after this command, a file with gpg extension will be created. so now you can put this file (secret-file.txt.gpg) on the internet and no one will know what it is\n  remove the original file (optional)\n basic remove   1  rm secret-file.txt    deep remove (more secure)   1  shred -u secret-file.txt     decrypt files with gpg   decrypt command\n1  gpg -d secret-file.txt     then enter the password of your gpg key. the password you entered while generating the key\n  ","description":"","id":24,"section":"posts","tags":["tools","howto","gpg"],"title":"what is gpg","uri":"https://savolla.github.io/posts/what-is-gpg/"}]