
[{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/-f/","section":"Tags","summary":"","title":"-F","type":"tags"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/-z/","section":"Tags","summary":"","title":"-Z","type":"tags"},{"content":" in /etc/docker/daemon.json { \u0026#34;insecure-registries\u0026#34; : [\u0026#34;NEXUS_IP:YOUR_REPO_PORT\u0026#34;] } here is an example { \u0026#34;insecure-registries\u0026#34; : [\u0026#34;192.168.1.54:5000\u0026#34;] } sudo systemctl restart docker ","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/f115dcd6-d7af-43a5-ba5e-6b299a7877c3/","section":"Zettels","summary":"","title":"add nexus docker registry to docker config","type":"zettel"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/alpine/","section":"Tags","summary":"","title":"Alpine","type":"tags"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/argocd/","section":"Tags","summary":"","title":"Argocd","type":"tags"},{"content":" assign static ip to alpine vi /etc/network/interfaces add the following. I want it to be 192.168.1.110 auto lo iface lo inet loopback auto eth0 iface eth0 inet static address 192.168.1.110 netmask 255.255.255.0 gateway 192.168.1.1 restart network /etc/init.d/networking restart ","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/e05834c5-5f6b-43c0-9f4a-6d5462f9ff3f/","section":"Zettels","summary":"","title":"assign static ip address on alpine linux","type":"zettel"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/devops/","section":"Tags","summary":"","title":"Devops","type":"tags"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker","type":"tags"},{"content":"Enable the “Docker Bearer Token Realm” in Nexus If this is not enabled, Nexus won\u0026rsquo;t accept Docker login requests. In the Nexus UI: Go to Security → Realms On the right side (Available realms), find: Docker Bearer Token Realm Move it to the left (Active realms) using the \u0026gt; button Make sure it is above the Docker Token realm if both are active Click Save\n","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/eab79c3e-7948-46c6-961e-2610994bb741/","section":"Zettels","summary":"","title":"fix login issue to nexus docker registry","type":"zettel"},{"content":"cat /opt/sonatype-work/nexus3/admin.password ","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/41125c16-6ee6-419d-b824-bc2c7ddd0f73/","section":"Zettels","summary":"","title":"get admin password for nexus","type":"zettel"},{"content":" add nexus user adduser nexus usermod -aG sudo nexus\ninstall nexus\napt install openjdk-17-jdk wget tar unzip -y cd /opt wget https://download.sonatype.com/nexus/3/nexus-3.83.1-03-linux-x86_64.tar.gz tar -xvf nexus-3.83.1-03-linux-x86_64.tar.gz mv nexus-3.83.1-03 nexus chown -R nexus:nexus /opt/nexus chown -R nexus:nexus /opt/sonatype-work nvim /opt/nexus/bin/nexus change shebang from sh to bash\nrun_as_user=\u0026lsquo;nexus\u0026rsquo; create a systemd service\nnvim /etc/systemd/system/nexus.service\nadd the following\n[Unit] Description=nexus service After=network.target [Service] Type=forking LimitNOFILE=65536 ExecStart=/opt/nexus/bin/nexus start ExecStop=/opt/nexus/bin/nexus stop User=nexus Restart=on-abort [Install] WantedBy=multi-user.target start nexus\nsystemctl daemon-reexec systemctl daemon-reload systemctl enable nexus systemctl start nexus reboot next steps is to get admin password for nexus\n","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/36f78810-6bbe-4e93-b75e-e6efe330ad32/","section":"Zettels","summary":"","title":"install nexus on ubuntu","type":"zettel"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/issue/","section":"Tags","summary":"","title":"Issue","type":"tags"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/kubernetes/","section":"Tags","summary":"","title":"Kubernetes","type":"tags"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/nexus/","section":"Tags","summary":"","title":"Nexus","type":"tags"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":" see setup docker registry using nexus for previous details tag an image with your repo docker tag alpine:latest 192.168.1.54:5000/alpine push image to private nexus registry docker push 192.168.1.54:5000/alpine ","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/02ef3872-d7bf-4bd1-8487-a97a2462b312/","section":"Zettels","summary":"","title":"push a local docker image to nexus docker registry","type":"zettel"},{"content":" you can\u0026rsquo;t delete from commandline. you must go to nexus ui and delete it from there ","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/4a82a516-fefb-462b-ad17-8b5688da74b7/","section":"Zettels","summary":"","title":"remove an image from nexus docker registry","type":"zettel"},{"content":" login into nexus go to http://192.168.1.54:8081/#admin/repository/repositories click \u0026ldquo;create repository\u0026rdquo; select docker hosted name it \u0026ldquo;docker-hosted\u0026rdquo; enable other connections http port 5000 allow anonymous docker pull next: add nexus docker registry to docker config next: fix login issue to nexus docker registry ","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/14ce6094-a158-4acb-bfdf-88bf4b7a300f/","section":"Zettels","summary":"","title":"setup docker registry using nexus","type":"zettel"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"kubectl get svc -n argocd # get argocd service (with port 80 or 443) kubectl port-forward svc/argocd-server -n argocd 8080:443 # start port forwarding access the service https://localhost:8080 login as admin get admin password of argocd in openshift ","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/42cc5dca-4842-4699-827b-87fd83c1c7b9/","section":"Zettels","summary":"","title":"temporarily expose argocd from kubernetes cluster","type":"zettel"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/ubuntu/","section":"Tags","summary":"","title":"Ubuntu","type":"tags"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/tags/youtube/","section":"Tags","summary":"","title":"Youtube","type":"tags"},{"content":" Introduction # you can find the pipeline here\nHello guys! In this video, we\u0026rsquo;ll be building a complete CI/CD pipeline from the ground up. I\u0026rsquo;ll guide you through setting up and using a variety of powerful tools including Terraform, Proxmox, NixOS, Jenkins, SonarQube, Docker, Kubernetes, and many more.\n[Display additional tools on screen.]\nWe\u0026rsquo;ll start by creating this pipeline from scratch, beginning with Infrastructure as Code. Using Terraform and Proxmox, we’ll spin up our servers, then proceed to install essential tools such as Jenkins, Kubernetes, ArgoCD, SonarQube, Nexus, and monitoring solutions like Prometheus and Grafana.\nFinally, we\u0026rsquo;ll deploy a sample application using the full pipeline.\nThis will be a multi-part tutorial series, so stay tuned for more!\nPipeline Showcase # This is the pipeline we\u0026rsquo;ll be building throughout this tutorial series. I\u0026rsquo;ve intentionally made it complex to maximize the learning experience. Throughout the setup, I’ve gained a lot of valuable insights, and now, I’m excited to share that knowledge with you. My goal is to help you deepen your understanding and take your skills to the next level.\n[start explaining pipeline from start to finish]\nA Note For My Environment # Let me quickly explain my environment so you’re comfortable following along.\nFor this tutorial, I’ll be using a special Linux distribution called NixOS. The reason I chose NixOS is because of its powerful package manager and overall stability. I\u0026rsquo;ll walk you through how to install packages and use some of its key features. However, if you prefer using another Linux distro like Arch or Debian, that’s perfectly fine. It won’t make a big difference. But If you\u0026rsquo;re on Windows or macOS, I won’t be covering the installation of tools on those systems, so you\u0026rsquo;ll need to handle that part on your own.\nFor my text editor, I\u0026rsquo;ll be using Emacs, but feel free to use VSCode or any other tool you’re comfortable with.\nTo manage my terminal sessions more efficiently, I’ll be using tmux. It\u0026rsquo;s an essential tool for anyone who spends a lot of time in the terminal, as it allows you to manage multiple sessions within a single terminal window. Plus, it preserves your SSH connections even if you accidentally close the terminal. For this tutorial, I’ll be using two tmux sessions: one for editing text and typing commands in Emacs, and another for managing SSH connections. Don’t worry, I’ll explain everything as we go to make it all crystal clear.\nTo help you follow along more easily, I’ll also be running a tool called screenkey, which will display my keystrokes in the bottom right corner.\nCode and Documentation # I want to make things as easy as possible for you. All the code and documentation from this series will be available in one place. Just head over to savolla.github.io/cortex, where you’ll find my personal knowledge base. Click on the ‘Videos’ section, find the video you’re watching, and you’ll have access to all the code and resources.\nIn the next episode, we’ll begin by installing Proxmox as a virtual machine and use Terraform to spin up our servers\n","date":"2025-09-02","externalUrl":null,"permalink":"/posts/20250902021815-zero_to_hero_cicd_pipeline_part_1/","section":"Posts","summary":"","title":"Zero to Hero CICD Pipeline | Part 1","type":"posts"},{"content":"","date":"2025-09-02","externalUrl":null,"permalink":"/zettel/","section":"Zettels","summary":"","title":"Zettels","type":"zettel"},{"content":"","date":"2025-09-01","externalUrl":null,"permalink":"/tags/emacs/","section":"Tags","summary":"","title":"Emacs","type":"tags"},{"content":" Basic Customizations # Header # ;;; $DOOMDIR/config.el -*- lexical-binding: t; -*- Dashboard # Nothing is better than a clean and customized dashboard. Here is my \u0026ldquo;suckless\u0026rdquo; stiled username and clean as possible dashboard. Btw I couldn\u0026rsquo;t find a way to disable that github icon but anyway.\n(remove-hook \u0026#39;+doom-dashboard-functions #\u0026#39;doom-dashboard-widget-shortmenu) (add-hook! \u0026#39;+doom-dashboard-functions :append (insert \u0026#34;\\n\u0026#34; (+doom-dashboard--center +doom-dashboard--width \u0026#34;\u0026#34;))) (defun my-weebery-is-always-greater () (let* ((banner \u0026#39;( \u0026#34; ██ ██ \u0026#34; \u0026#34; ██ ██ \u0026#34; \u0026#34; ████████████ ██████████ ██ ██████\u0026#34; \u0026#34; ██ ██▄▄████ ████ ████ ██ ██▄▄██\u0026#34; \u0026#34;████ ██ ██ ██ ████████████████ ██\u0026#34; )) (longest-line (apply #\u0026#39;max (mapcar #\u0026#39;length banner)))) (put-text-property (point) (dolist (line banner (point)) (insert (+doom-dashboard--center +doom-dashboard--width (concat line (make-string (max 0 (- longest-line (length line))) 32))) \u0026#34;\\n\u0026#34;)) \u0026#39;face \u0026#39;doom-dashboard-banner))) (setq +doom-dashboard-ascii-banner-fn #\u0026#39;my-weebery-is-always-greater) Persoal Information # ;; personal info (setq user-full-name \u0026#34;Kuzey Koç\u0026#34; user-mail-address \u0026#34;savolla@protonmail.com\u0026#34;) Fonts # I personally like narrow mono fonts. Iosevka is already narrow but IosevkaTerm is better as a terminal font and programming in general. More characters fit in a single line\n;; font configuration (setq doom-font (font-spec :family \u0026#34;IosevkaTerm Nerd Font Mono\u0026#34; :size 24) doom-variable-pitch-font (font-spec :family \u0026#34;IosevkaTerm Nerd Font Mono\u0026#34; :size 24)) Theme # I\u0026rsquo;m a big fan of Gruvbox color scheme.\n;; theme (setq doom-theme \u0026#39;doom-gruvbox) But I don\u0026rsquo;t like the default low contrast background of it so I made the background more darker. This setting is also better to use if you use transparency in emacs\n;; make darker background in gruvbox (after! doom-themes (custom-set-faces! \u0026#39;(default :background \u0026#34;#000000\u0026#34;))) Line Numbers # (setq display-line-numbers-type t) (setq display-line-numbers-type \u0026#39;relative) Window Separator # Doom\u0026rsquo;s line separator is not visible at all. so I change it\u0026rsquo;s width and color for better visibility\n;;; thicken window separator (setq window-divider-default-right-width 2 window-divider-default-bottom-width 2) ;;; change color of separator (custom-set-faces! \u0026#39;(vertical-border :foreground \u0026#34;#877b75\u0026#34;)) Line Wrapping # this gives me a little bit of headache because line wrapping also affects my vterm shell. I need to find a way (a hook maybe?) to disable this in vterm\n(global-visual-line-mode t) ; enable line wrapping globally Some QoL Improvements # I really don\u0026rsquo;t like the \u0026ldquo;whole line highlighting\u0026rdquo; in my editor. it may improve visibility of the current position but I prefer brighter cursor colors like #00FF00 instead\n(setq global-hl-line-modes nil) ; disable current line hightlight Package Based Customizations # Evil # (setq global-hl-line-modes nil) ; disable current line hightlight ","date":"2025-09-01","externalUrl":null,"permalink":"/posts/doom-emacs-config/","section":"Posts","summary":"","title":"My Literal Doom Emacs Config","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]